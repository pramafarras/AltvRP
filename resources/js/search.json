[[{"i":"what-is-rebar","l":"What is Rebar?","p":["Rebar is a plugin-based framework for GTA:V based on alt:V that focuses on server-side functionality to control almost all player aspects. Rebar provides a robust starting point for any game mode as you'll be able to choose from a wide variety of community plugins to install. Rebar thrives with its welcoming Discord community, community contributions, and plugins.","Rebar stops server developers from spending years building boilerplate code, and instead gets them straight to writing their game mode."]},{"l":"Tech Stack","p":["Node.js","TypeScript","MongoDB","Vue"]},{"i":"why-the-name-rebar","l":"Why the name Rebar?","p":["Rebar is the foundational piece necessary to construct large concrete structures. Think of this framework as achieving the same from a game mode standpoint."]},{"i":"rebar-vs-fivem-esx-qbcore","l":"Rebar vs Fivem (ESX, QBCore)","p":["While ESX, and QBCore have been around forever, Rebar handles all the heavy lifting for you."]},{"l":"Getting Started"},{"l":"Experienced Developers","p":["Head on over to Install & Upgrade to learn about the installation process."]},{"l":"New Developers","p":["Head on over to the book on Rebar and how to utilize it. There's even a few small tutorials on programming."]}],[{"i":"install--upgrade","l":"Install & Upgrade","p":["Hey listen! When you run Rebar for the first time, you won't be able to spawn.","This is simply for server setup, and getting started.","Check out some Plugins to get everything working!"]},{"l":"1. Programs to Install","p":["Install these programs.","Git","Node.js","pnpm","MongoDB Server","Ensure that if you are running it locally, do not set a database password.","When you move your server to production use something like MongoDB Atlas","If you are having trouble installing pnpm you can run this command in a Powershell Window with Admin Enabled.","These are optional but recommended if developing","VSCode"]},{"l":"2. Clone the Repository","p":["Open a terminal and clone the repository somewhere."]},{"l":"Navigate into Rebar"},{"l":"3a. Windows"},{"l":"Install"},{"l":"Download Binaries"},{"l":"Start","p":["Alternatively, development mode can be started with","If you want to use an even faster development mode, try out hot reloading. This one simply reloads the resource."]},{"l":"3b. Linux","p":["Last installation was tested on Ubuntu 22.04+"]},{"l":"Install libatomic"},{"i":"install-1","l":"Install"},{"i":"download-binaries-1","l":"Download Binaries"},{"l":"Grant execute permissions"},{"i":"start-1","l":"Start","p":["Alternatively, development mode can be started with"]},{"l":"3c. Docker","p":["Follow all of the instructions above.","Build with pnpm build:docker and then run ./altv-server."]},{"l":"Upgrading"},{"l":"Auto Upgrade","p":["If you already have Rebar installed simply run the following command:"]},{"l":"Manual Upgrade","p":["Download the latest version Rebar into another folder.","Copy the folders src/main, webview, and docs folder into the main folder of Rebar.","Copy the file package.json to the main folder of Rebar.","Run pnpm upgrade and pnpm install.","Click To Download Latest Source Code","That's it."]},{"l":"Webview Development","p":["If you need to develop an interface out of game, you can use pnpm:webview"]}],[{"l":"FAQ","p":["Frequently asked questions about Rebar."]},{"i":"where-do-i-put-my-mods","l":"Where do I put my mods?","p":["You put them inside of the resources folder, and load it like a normal alt:V Resource."]},{"i":"none-of-my-changes-are-saving-when-i-modify-files","l":"None of my changes are saving when I modify files?","p":["Be sure that you are only modifying files inside of the src directory."]},{"i":"are-fivem-scripts-compatible","l":"Are FiveM scripts compatible?","p":["No, we use TypeScript in this framework and furthermore it is written for https://altv.mp client."]},{"i":"can-i-use-my-own-frontend-framework","l":"Can I use my own frontend framework?","p":["No, you will have to do a lot of changes to get any other framework to work correctly.","It is not recommended, and to keep all plugins compatible we use Vue 3 and the same CSS framework across all plugins."]},{"i":"can-i-use-my-own-css","l":"Can I use my own CSS?","p":["Sure, but it is recommended to use Tailwind to keep everything compatible across all plugins."]},{"i":"can-i-use-my-own-database","l":"Can I use my own database?","p":["No, it is highly recommended to stick to MongoDB and to lower the complexity for everyone using your plugins.","To run your own database you will need to write it as a plugin and use it exclusively.","Doing so may limit your ability to load plugins from other users."]},{"l":"Can I use npm packages client-side","p":["Nope! You won't ever be able to. However, you can use them in the webview, and on server-side."]},{"i":"do-i-need-to-buy-a-server","l":"Do I need to buy a server?","p":["Only buy a server when you're ready for your server to go live.","Otherwise, stick to local testing and allowing others to join locally."]},{"i":"how-can-i-speed-up-development-time","l":"How can I speed up development time?","p":["There are a number of ways to do this, but here are some recommended approaches.","Disable any third-party plugins","Disable any MLOs that need to be loaded","Doing both of these will increase load time, and allow you to focus on writing your plugin."]},{"i":"can-i-sell-plugins","l":"Can I sell plugins?","p":["Absolutely, however Rebar does not provide any resources to secure your code. You are fully responsible for updating your plugin as well as maintaining compatability with future updates.","Keep in mind there is no way to properly secure code."]}],[{"l":"Troubleshooting","p":["This troubleshooting guide mostly pertains to people who have successfully installed this framework.","If you are still having trouble installing, kindly visit the Discord's help section."]},{"l":"Clear node_modules","p":["Simply delete the entire node_modules folder.","Windows","Linux","Run pnpm install after completing this step."]},{"l":"Upgrade Server Binaries","p":["Run pnpm upgrade to get the latest version of alt:V Server Binaries.","If this does not work remove the following files manually, and then upgrade:","altv-crash-handler.exe","altv-server.exe","libnode.dll","cache","modules",".server-crashes-cache","Run pnpm upgrade after this has completed."]},{"l":"Clone Rebar Again","p":["If you're following the general principal of not modifying core code, you can simply move your plugins to a new instance of Rebar.","Download a new copy of Rebar, move your plugins to the plugins folder.","Install everything again with pnpm install, pnpm upgrade, and then do pnpm start."]},{"i":"still-not-working","l":"Still Not Working?","p":["You're at a point where you'll need to start disabling plugins, or moving them out 1-by-1 to see which is the most problematic plugin.","Remove all of your plugins, and start adding them back in 1-by-1, and running the server each time.","If your server stops working after you re-introduced a plugin, then you've found your troublemaker."]}],[{"l":"Changelog"},{"l":"Version 53"},{"l":"Breaking Changes","p":["Custom delcarations are still possible.","Event Name Changes:","Removed alt.getMeta for Rebar Imports","Removed permission and groupPermissions properties from useAccount and useCharacter.","Removed useMessenger.message.on,","Removed useRebarEvents and moved all events to alt.on and alt.emit","Removed useServerTime","Removed useServerWeather","Removed useVehicleEvents, useCharacterEvents, and useAccountEvents","Renamed account-bound event to rebar:playerAccountBound","Renamed character-bound event to rebar:playerCharacterBound","Renamed doorLocked event to rebar:doorLocked","Renamed doorUnlocked event to rebar:doorUnlocked","Renamed message event to rebar:playerSendMessage","Renamed on-command event to rebar:playerCommand","Renamed on-rpc-restart event to rebar:rpcRestart","Renamed page-closed event to rebar:playerPageClosed","Renamed page-opened event to rebar:playerPageOpened","Renamed time-changed event to rebar:timeChanged","Renamed time-hour-changed event to rebar:timeHourChanged","Renamed time-minute-changed event to rebar:timeMinuteChanged","Renamed time-second-changed event to rebar:timeSecondChanged","Renamed vehicle-bound event to rebar:vehicleBound","Renamed weather-changed event to rebar:weatherChanged","Renamed weather-forecast-changed event to rebar:weatherForecastChanged","Replaced all rebar-event-names with camelCased events","Replaced with alt.on('rebar:vehicleUpdated'), alt.on('rebar:playerCharacterUpdated'), and alt.on('rebar:playerAccountUpdated').","Replaced with useWorldService","Reworked permission system:","Same functionality can be achieved through alt.on with playerSendMessage","This likely doesn't effect anyone","When you check for players' permissions, it will automatically check both groups and plain permissions."]},{"l":"Code Changes","p":["Account","add (invoke adding currency)","add (invoke an item add)","addBlip","Added ability to use string union for blip colors","Added ability to use string union for blip sprite types","Added Custom alt.getMeta Keys for...","Added invokeWithResult for player natives, to invoke a native and get a result","Added isOverlayOpen and isPersistentPageOpen to client-side for checking if a page is open","Added more verbose error printing for plugin imports, should function like before again","Added rebar:onTick which just emits a tick every 1 second for general usage","Added support for interactions to","Added useCurrencyService","Added useDeathService","Added useItemService","Added useNotificationService","Added useServiceRegister","Added useTimeService","Added useWeatherService","Added vehicle door sync for open / shut states","addMarker","addTextLabel","All these functions do nothing until a library is registered","All these functions do nothing until a library is registered\\","Automatically converted to numerical","broadcast (invoke a notification send, to all players)","Changed Account from type to interface","Character","Destroy all of the above when interaction is destroyed","emit (invoke a notification send)","emits events when currency added or subtracted","emits events when items added, subtracted, or removed","emits events when notification emitted, or broadcasted","emits events when respawned, or revived","emits events when time updated by hour, minute, or second","emits events when weather updated, or forecast updated","Fix issue where removing attachements was not working correctly","Fix vehicle handler so setting {} will actually clear the vehicle handling","getBlip","getMarker","getPos","getTextLabel","getTime (get the current time for the server)","getWeather (get the current weather for the server)","getWeatherForecast (get weather forecast for the server)","Groups are now created globally, and you can assign players' documents to the group.","has (check if has enough currency)","has (invoke if player has an item)","itemCreate (create an item to add to the database)","itemRemove (remove an item from the database)","Made blips shortRange parameter optional, and default to true","Made dev menu from the webview:dev command scrollable","Made it so emitting notifications from server-side defaults to a GTA:V Notification, until a library is added","memberOfGroup(documentType: 'account' | 'character' | 'any', groupName: string)","Moved Page Events to pageSystem to keep functionality working","Provides common APIs for common features to integrate custom functionality.","remove (invoke an item remove)","Removed ammo from the database, and ammo is now stored on the individual weapon instead","Replaced in-house get closest entity function with alt.getClosestEntities","respawn (invoke a respawn)","revive (invoke a revive, in place)","serverTime","serverWeather","serverWeatherForecast","Services do nothing until a library registers itself under a service.","setTime (set the time for the whole server)","setWeather (set the weather for the server)","setWeatherForecast (set weather forecast for the server)","sub (invoke an item subtraction)","sub (invoke removing currency)","Two new player-getters:","Updated Document Typings for ... to better handle module extension","Updated useWeapon for player to properly save weapon data and ammo count","Updated weapon helpers to allow for hash or string models","Vehicle","withPermission(documentType: 'account' | 'character' | 'any', permission: string)","You can inherit a new group from another one; it will inherit all permissions from the parent.","You can now access permissions/groups of character/account via useVirtual."]},{"l":"Docs Changes","p":["Document getWeapons and update documentation for useWeapon for the player","Document all services under useService","Document all event changes, and update events page","Document the new permission system."]},{"l":"Version 52"},{"i":"code-changes-1","l":"Code Changes","p":["Added ability to change database name through environment variables — @floydya","Added door system controller — @floydya","Added server config option for disabling weapon wheel menu — @mnkyarts","Added onHold callback for useKeypress that invokes after x time has passed while holding a key — @koron","Updated useKeypress to include onHold, which is invoked after 2s of holding"]},{"i":"docs-changes-1","l":"Docs Changes","p":["Added door system docs @floydya","Added env options for database name to useConfig page","Updated server config docs @mnkyarts","Updated useKeypress docs to include onHold"]},{"l":"Version 51"},{"i":"code-changes-2","l":"Code Changes","p":["Auto copy nodemon-dev and nodemon-hot files during script updates"]},{"l":"Version 50"},{"i":"code-changes-3","l":"Code Changes","p":["Permission system was redone by @floydya for better performance and usage","Added hot reloading option for core and webview resources, accessible through dev:hot","This keeps you connected to the server while the resource itself reloads, it's quite fast","Split nodemon into two configurations, added new script for reloading"]},{"i":"docs-changes-2","l":"Docs Changes","p":["Permission system was updated / documented by @floydya","Documented dev:hot for install"]},{"l":"Version 49"},{"i":"code-changes-4","l":"Code Changes","p":["Updated Virtual Document to use a generic at the base level for the whole document","This changes how Virtual Documents are constructed, and may break some things if you use virtual documents.","Added useMessenger to systems pathway","Fix vehicle handling so it always returns streamSyncedMeta data","Added handling to useVehicle","Added vehicle to useVehicle, makes it so you can do rPlayer.player.pos","Added player to usePlayer, makes it so you can do rVehicle.vehicle.pos","Changed Rebar endpoints to use Hono, and deprecated old server utility @floydya"]},{"i":"docs-changes-3","l":"Docs Changes","p":["Restructured the documentation","Documented useCharacterEvents and useAccountEvents","Combined getters documentation","Combined controllers documentation","Combined vehicle documentation"]},{"l":"Version 48"},{"i":"code-changes-5","l":"Code Changes","p":["Updated RPC endpoints","Began structuring new RPC endpoint functions","Server-side instructional buttons integrated by floydya"]},{"l":"Version 47"},{"i":"code-changes-6","l":"Code Changes","p":["Added an RPC endpoint under http://127.0.0.1:8787 with endpoints /restart, /, and /health.","Fixed issue where reconnecting too early would cause client to be frozen on reconnecting","Restarting server now kicks all players while in dev mode only"]},{"l":"Version 46"},{"i":"code-changes-7","l":"Code Changes","p":["Added useInteractionLocal to create local interactions for individual players"]},{"i":"docs-changes-4","l":"Docs Changes","p":["Updated useInteraction to include useInteractionLocal"]},{"l":"Version 45"},{"i":"code-changes-8","l":"Code Changes","p":["Added useVehicleHandling function that lets you adjust handling per vehicle","Added object attachments for players, see useAttachment under the player endpoint"]},{"i":"docs-changes-5","l":"Docs Changes","p":["Documented useVehicleHandling","Documented useAttachment"]},{"l":"Version 44"},{"i":"code-changes-9","l":"Code Changes","p":["Fixed issue with setting global document data","Additionally, improved type casting support for global documents"]},{"i":"docs-changes-6","l":"Docs Changes","p":["Updated object document api to clarify generics usage"]},{"l":"Version 43"},{"i":"code-changes-10","l":"Code Changes","p":["Fixed local object initialization"]},{"i":"docs-changes-7","l":"Docs Changes","p":["N/A"]},{"l":"Version 42"},{"i":"code-changes-11","l":"Code Changes","p":["Added near perfect Torso, Top, and Undershirt data for 99% of tops","Added helper functions in shared clothing script to help obtain clothing data","Fixed bug where local objects were not being destroyed","Fixed bug where disabled plugins were copying files","Fixed bug where previous files were not cleaned up properly"]},{"i":"docs-changes-8","l":"Docs Changes","p":["N/A"]},{"l":"Version 41"},{"i":"code-changes-12","l":"Code Changes","p":["Added useStreamSyncedBinder to automatically synchronize document data from server to client for vehicles and characters","Added useSyncedMeta composable to the webview, to get data synced from useStreamSyncedBinder","Added useStreamSyncedGetter to client-side to get type safe responses for stream synced meta data"]},{"i":"docs-changes-9","l":"Docs Changes","p":["Documented useStreamSyncedBinder, useSyncedMeta, and useStreamSyncedGetter"]},{"l":"Version 40"},{"i":"code-changes-13","l":"Code Changes","p":["Added new dlc clothing maximums for 2024 DLC","Added keypress api that lets you bind functions to keyup/keydown from server-side","Added setRpm to vehicle API","Added new fonts resource, which may need to be imported in your server.toml; for custom fonts","Lower distance for all Text Labels; max distance now capped at 20","Failing readiness check on an API will now return the failing API's name","Added D2D text labels with global and local support"]},{"i":"docs-changes-10","l":"Docs Changes","p":["Documented keypress","Documented keypress in vehicle api","Documented fonts folder"]},{"l":"Version 39"},{"i":"code-changes-14","l":"Code Changes","p":["Potentially fixes bug where dependencies.json aren't installed outright","Fixes a hasGroupPermission function bug","Modified client side player camera with some new functions"]},{"i":"docs-changes-11","l":"Docs Changes","p":["N/A"]},{"l":"Version 38"},{"i":"code-changes-15","l":"Code Changes","p":["Added method to allow for Rebar Events to be extended via global declare.","Added rPlayer.sound pathway, works the same as rPlayer.audio","Moved images to https://github.com/Stuyk/gtav-image-archive/"]},{"i":"docs-changes-12","l":"Docs Changes","p":["Added documentation covering custom Rebar Events to the events api."]},{"l":"Version 37"},{"i":"code-changes-16","l":"Code Changes","p":["Introduced method for clothing screeshots"]},{"i":"docs-changes-13","l":"Docs Changes","p":["N/A"]},{"l":"Version 36"},{"i":"code-changes-17","l":"Code Changes","p":["Added screenshot utility for weapons"]},{"i":"docs-changes-14","l":"Docs Changes","p":["Added weapon screenshot doc"]},{"l":"Version 35"},{"i":"code-changes-18","l":"Code Changes","p":["Added screenshot utility for taking screenshot of vehicle"]},{"i":"docs-changes-15","l":"Docs Changes","p":["Documented screenshot utility"]},{"l":"Version 34"},{"i":"code-changes-19","l":"Code Changes","p":["Adds a new ambient sound to the server config","Fixes an issue where subfolders were not supported for images, and sounds","Added onScreenPed solution to show a pedestrian in the 2D space, below webview","Automatically synchronizes ped with ped reference changes, such as clothes","Thanks to BattleZone for confirming that NVE is problematic with frontend menus","Added manual override for useKeybinder to updateKeybindForPlayer","Fixed bug where global documents were overwriting global cache","Modify getByAccount and getByCharacter to also take numbers for their id getter","Change vehicle getByDatabaseId to byId('_id');"]},{"i":"docs-changes-16","l":"Docs Changes","p":["Modifies the server config to include disableAmbientNoise","Added docs for updateKeybindForPlayer","Updated vehicle getter docs","Updated character getter docs"]},{"l":"Version 33"},{"i":"code-changes-20","l":"Code Changes","p":["Fixes issue where pickup sometimes doesn't spawn the object","Added all clothing dlc info, and maximums to a shared data structure","Added clothing data getters to Rebar.utility.clothing","Added addCategory section to add custom DLC data during runtime"]},{"i":"docs-changes-17","l":"Docs Changes","p":["Added utility clothes section to server API"]},{"l":"Version 32"},{"i":"code-changes-21","l":"Code Changes","p":["Added function to attach blips to entities, because alt:V's one is broken","Additionally, when a blip or the entity becomes invalid the blip is automatically destroyed."]},{"i":"docs-changes-18","l":"Docs Changes","p":["Updated blip documentation to cover attachments"]},{"l":"Version 31"},{"i":"code-changes-22","l":"Code Changes","p":["Added disableAttackControls, disableCameraControls, and freezeCamera to player.world pathway","Fixed issue with local progress bars not clearing","Fixed issue with gif files not being copied correctly"]},{"i":"docs-changes-19","l":"Docs Changes","p":["Added documentation covering player.world new functions"]},{"l":"Version 30"},{"i":"code-changes-23","l":"Code Changes","p":["Added a vscode transmitter for debug mode server and client.","Allows for code to be executed from VSCode using the Rebar Transmitter"]},{"i":"docs-changes-20","l":"Docs Changes","p":["Added vscode transmitter extension page"]},{"l":"Version 29"},{"i":"code-changes-24","l":"Code Changes","p":["Custom rmlui get distributed to resources/rmlui/plugins folder","Additionally html files act as rmlui and are converted into rmlui during the compile process"]},{"i":"docs-changes-21","l":"Docs Changes","p":["Added a section in Plugin Structure that covers how to work with rmlui correctly, and what the paths are to use the resource."]},{"l":"Version 28"},{"i":"code-changes-25","l":"Code Changes","p":["Made interaction setMessage show a GTA:V notification by default when entering.","Synchronize vehicle customPrimaryColor, customSecondaryColor, primaryColor, and secondaryColor","Added offKeyUp to key listeners for webview composable","Added disableCriticalHits to server configuration settings","Added Rebar Event for on-command that lets you listen to what commands successfully executed","Improve performance of player stats by making it a single event for setting stats","Added zone, isAiming, and isFlying to player stats","Fix vehicle stop server config bug, flag was incorrect","Added server configs for disabling prop knockoff, cover, drivebys, and scuba gear removal"]},{"i":"docs-changes-22","l":"Docs Changes","p":["Added onKeyUp and offKeyUp to webview event composable","Updated useServerConfig docs","Updated playerStats doc"]},{"l":"Version 27"},{"i":"code-changes-26","l":"Code Changes","p":["Added onClose function for webview","Added escapeToClosePage to show function for webviews","Keep in mind this only works for page types","Added RebarEvent for page open and page close on server-side"]},{"i":"docs-changes-23","l":"Docs Changes","p":["Updated playerUse webview section for show function to include info about escape to close","Added RebarEvent onClose and onOpen docs"]},{"l":"Version 26"},{"i":"code-changes-27","l":"Code Changes","p":["Added useProgressbar controller","Fixed permission length bug","Fixed some misnamed functions in other controllers","Added useWorldMenu controller for building quick selection menus","Fixed bug where keybinds could be invoked if certain menus were open"]},{"i":"docs-changes-24","l":"Docs Changes","p":["Added images for controllers","Added useProgressbar doc","Added useWorldMenu doc"]},{"l":"Version 25"},{"i":"code-changes-28","l":"Code Changes","p":["Added account document to usePlayer","Fixed small permission hasOne error","Added various shared Utility functions to Rebar.utility to lower import counts","Added toggle controls to usePlayer().world to control controls state","Fixed small bug where hotkeys could be invoked when game controls are disabled"]},{"i":"docs-changes-25","l":"Docs Changes","p":["Added code examples page","Added troubleshooting page","Updated player world api for toggling controls"]},{"l":"Version 24"},{"i":"code-changes-29","l":"Code Changes","p":["Added server configs for auto; starting engine, stopping engine, and seat swapping in vehicles","Added useKeybinder to bind hotkeys from server-side, enabling users to call from their client","Adjusted world space checker to delay by 100ms before checking, fixing colshape creation times"]},{"i":"docs-changes-26","l":"Docs Changes","p":["Updated server config doc","Added useKeybinder page"]},{"l":"Version 23"},{"i":"code-changes-30","l":"Code Changes","p":["Added Draggable Component to WebView"]},{"i":"docs-changes-27","l":"Docs Changes","p":["Added Draggable to webview/components section with an example on making draggables","Added Draggable Component to WebView"]},{"i":"docs-changes-28","l":"Docs Changes","p":["Added Draggable to webview/components section with an example on making draggables"]},{"l":"Version 22"},{"i":"code-changes-31","l":"Code Changes","p":["Added useRateLimitCallback","Added onEnter and onLeave to interaction callbacks","Added disablePistolWhip to useServerConfig that prevents pistol whipping one-hits"]},{"i":"docs-changes-29","l":"Docs Changes","p":["Created useRateLimitCallback docs","Added onEnter and onLeave to interaction docs","Added disablePistolWhip to useServerConfig docs"]},{"l":"Version 21","p":["I forgot to write the changelogs. lmao"]},{"l":"Version 20"},{"i":"code-changes-32","l":"Code Changes","p":["Made raycast.getFocusedObject() return entityPos","Clearly warn users using api.get for obtaining an API, and recommend async instead","Added new getMeta API for getting plugin API as single import","Added debug option to raycast functions to draw lines when a raycast is invoked","Added useServerConfig to change what HUD elements, and other on screen elements a player sees"]},{"i":"docs-changes-30","l":"Docs Changes","p":["Added debug to raycast docs","Removed get from Plugin API examples, to let users focus on async instead","Added useServerConfig to docs"]},{"l":"Version 19"},{"i":"code-changes-33","l":"Code Changes","p":["Added reverse map for vehicle model hash to vehicle model name","Added function to add named models to list at runtime as well","Added neon synchronization to vehicle document sync"]},{"i":"docs-changes-31","l":"Docs Changes","p":["Added vehicleHashes utility doc info"]},{"l":"Version 18"},{"i":"code-changes-34","l":"Code Changes","p":["Added group permissions for protected callbacks","Added new controller usePed which creates a global pedestrian which can have synced natives invoked on it","Added useProxyFetch which allows for you to register safe endpoints on server-side which can be called client-side.","Added useRaycast to get entity aimed at from client-side and return it to the server","Added useVehicle enhancements","Additionally, optional section to check if they are the sole owner of the vehicle","bind","Can even easily listen to when the specific ped spawned dies","Can obtain model & position of world object looked at","Can obtain player, vehicle, or alt.Object looked at","Can obtain position looking at","Check if the player is an 'owner' of the vehicle","Check if the vehicle is already bound","Fixed a bug where closest entity and target ids matched, when they were different types","Fixed character permission issues when using protected callbacks","Fixed passing message on client-side for interaction onEnter callbacks","Functions that toggled asPlayer verify ownership of keys, permission, or owner itself of the vehicle","isBound","It's recommended not to spawn more than 32 given peds around a single player.","keys: add, remove, clear","Meaning that if you have an API which only allows your server to make requests, this is a way to invoke it safely.","This effectively allows you to make requests from the server to safely get results.","toggleDoor","toggleDoorAsPlayer","toggleEngine","toggleEngineAsPlayer","toggleLock","toggleLockAsPlayer","verifyOwner"]},{"i":"docs-changes-32","l":"Docs Changes","p":["Added useProxyFetch doc","Added useRaycast doc","Added useVehicle updates","Added usePed controller docs"]},{"l":"Version 17"},{"i":"code-changes-35","l":"Code Changes","p":["Added alt.getMeta('Rebar') to get Server API with one-less import","Added alt.getMeta('RebarClient') to get Client API with one-less import","Fixed character interface not being extended correctly","Added preinstall script to download binaries, and build codebase once"]},{"i":"docs-changes-33","l":"Docs Changes","p":["Covered alternative API import methods in docs"]},{"l":"Version 16"},{"i":"code-changes-36","l":"Code Changes","p":["Added @Composables path alias","Added @Plugins path alias"]},{"i":"docs-changes-34","l":"Docs Changes","p":["Updated composables with @Composables","Updated what is a plugin with information about component / composable only plugins"]},{"l":"Version 15"},{"i":"code-changes-37","l":"Code Changes","p":["Update dependencies","Update _id in database functions to use a non-deprecated ObjectId handler","Added useServerWeather function to allow setting weather and weather forecast","This does not automatically sync for players, it's just a global way to set the data"]},{"i":"docs-changes-35","l":"Docs Changes","p":["Added useServerWeather docs"]},{"l":"Version 14"},{"i":"code-changes-38","l":"Code Changes","p":["Added emitServerRpc to Webview to retrieve data from server-side using normal alt.onRpc events.","Yes, this means you don't have to do weird event bindings to get data now.","Added emitClientRpc to Webview to retrieve data from client-side."]},{"i":"docs-changes-36","l":"Docs Changes","p":["Added emitServerRpc and emitClientRpc to docs"]},{"l":"Version 13"},{"i":"code-changes-39","l":"Code Changes","p":["Updated upgrade script to prevent overwriting tailwind config, or vite config","Added useLocalStorage composable for getting / storing data"]},{"i":"docs-changes-37","l":"Docs Changes","p":["Added useLocalStorage composable docs"]},{"l":"Version 12"},{"i":"code-changes-40","l":"Code Changes","p":["Completely redid the compile pipeline","Improved compile times, and added docker build support to package.json scripts","Fixed linux based errors"]},{"i":"docs-changes-38","l":"Docs Changes","p":["Added install instructions for Linux","Added install instructions for Docker"]},{"l":"Version 11"},{"i":"code-changes-41","l":"Code Changes","p":["Added createCollection to database functions","Automatically create default collections on startup","Added rebar:upgrade script to get the latest code changes for Rebar"]},{"i":"docs-changes-39","l":"Docs Changes","p":["Added createCollection function to the database functions","Clarified how no spawner exists outright for Rebar","Added documentation about upgrading"]},{"l":"Version 10"},{"i":"code-changes-42","l":"Code Changes","p":["Added ignore and autogen as a keyword to ignore file changes when developing","Added time-changed, time-second-changed, time-minute-changed, and time-hour-changed events to core events","Added useServerTime setters / getters for managing server time more effectively","Note: This does not auto-sync on players, other plugins can build more complex time systems"]},{"i":"docs-changes-40","l":"Docs Changes","p":["Added useServerTime API docs","Added time-changed, time-second-changed, time-minute-changed, and time-hour-changed event documentation"]},{"l":"Version 9"},{"i":"code-changes-43","l":"Code Changes","p":["Added client-side messenger for handling chat focus states","Patched issue where pressing E while chat is focused invoked interactions","Patched issue where pressing native menu buttons while chatting invoked native menu functions"]},{"l":"Version 8"},{"i":"code-changes-44","l":"Code Changes","p":["Fixed various get closest functions for player and vehicle getters","Added useWaypoint to get a waypoint a player has on their map if available","Added usePlayer function that combines all useX functions for player","Added Rebar.utility.useProtectCallback which adds permissions to callbacks before they are executed","A simple way to protect alt:V client event callbacks"]},{"i":"docs-changes-41","l":"Docs Changes","p":["Added useWaypoint docs","Added usePlayer docs","Added useProtectCallback docs"]},{"l":"Version 7"},{"i":"code-changes-45","l":"Code Changes","p":["Added useMinimap composable to get minimap positional data in the Webview","Added custom message type when emitting messages to prevent formatting"]},{"i":"docs-changes-42","l":"Docs Changes","p":["Documented useMinimap composable"]},{"l":"Version 6"},{"i":"code-changes-46","l":"Code Changes","p":["Added ability for commands to be async","Added character synchronization when a character document is bound to the player","Added onKeyUp to the Webview Events functionality, allowing an easy way to listen for keybinds","Added playFrontendSound to useAudio composable in the webview","Added useVehicle function for synchronizing vehicle data, applying data, repairing, and creating new vehicle documents","Added useWeapon to player pathway. Allows for synchronizing weapons, and ammo for database","Added vehicle synchronization when a vehicle document is bound to the vehicle","Added ways to disable auto-sync for vehicle and character documents in the binding functions","Changed all update() functions to sync and added backwards compatible update function","Separated logic for appyling data on appearance and clothing so overrides are possible","Split Character into BaseCharacter and Character, nothing changed externally","Synchronizes appearance, and clothing","Synchronizes damage (not appearance)","Synchronizes death state","Synchronizes dirt levels","Synchronizes health, and armor","Synchronizes mods","Synchronizes position, and rotation","Synchronizes tire damage","Synchronizes weapons, and ammo","Synchronizes window damage"]},{"i":"docs-changes-43","l":"Docs Changes","p":["Updated blip controller docs for typo","Added useVehicle documentation","Updated documentation for useCharacterBinder that will allow ignoring auto-sync on binding","Updated documentation for useVehicleBinder that will allow ignoring auto-sync on binding","Added useWeapon documentation","Added useState documentation","Changed update() references to sync()","Updated documentation for useAudio composable"]},{"l":"Version 5"},{"i":"code-changes-47","l":"Code Changes","p":["Added isValid to character, account, and vehicle documents to check if an entity has a bound document","Added useStatus to player API pathway to check for account and character status","Added events to the Rebar API","Added on account bound","Added on character bound","Added on vehicle bound","Added on message","Fixed small bug with case-sensitive commands","Fixed bug that allowed sending messages when a character was not bound"]},{"i":"docs-changes-44","l":"Docs Changes","p":["Added isValid examples to character, account, and vehicle.","Added useStatus to player section","Added events section to Server API"]},{"l":"Version 4"},{"i":"code-changes-48","l":"Code Changes","p":["Added getCommands to the messenger system","Added formatTimestamp to the shared utilities"]},{"l":"Version 3"},{"i":"code-changes-49","l":"Code Changes","p":["Added focus and unfocus support to client-side webviews"]},{"l":"Version 2"},{"i":"code-changes-50","l":"Code Changes","p":["Fixed issue with disabling plugins"]},{"l":"Version 1"},{"i":"code-changes-51","l":"Code Changes","p":["Added package.json or dependency.json support to plugins","Added an install pipeline for plugins that need specific npm packages","Added ability to disable a plugin by creating a file called .disable in the given plugin folder","Added useMessenger to server-side for processing user commands, and chat system (not console commands)","useMessenger also provides onMessage, sending messages, registering commands, and invoking commands","Added useMessenger composable to webview for emitting messages to the server for processing, automatically handles commands","Additional note, messages are sent to the void and go nowhere until a chat plugin is added","This is effectively a messenger middleware for building a chat or command system","Added sendMessage to the useNotify player composable"]},{"i":"docs-changes-45","l":"Docs Changes","p":["Added question about NPM packages to FAQ docs","Added virtual document type docs to the API/Document section","Updated what is a plugin, and create docs to clarify new changes","Updated useNotify docs for sendMessage","Added useMessenger docs for composable, and server-side"]}],[{"l":"Client Console Commands","p":["There are a handful of tools in-game that will allow you to easily obtain information to build out plugins.","Log in to your server.","Press F8 to open your client console","Type any of the commands below in the console to log data"]},{"l":"Client Console Command List"}],[{"i":"what-is-a-plugin","l":"What is a Plugin?","p":["A plugin can be seen as code that is meant to work with the Rebar Framework."]},{"i":"where-are-plugins-stored","l":"Where are plugins stored?","p":["Plugins can be found in the src/plugins directory, and each plugin should have a unique folder name."]},{"l":"Example Plugin Structure","p":["This plugin structure is used purely as a full featured plugin.","See plugin structure for more information."]},{"i":"example-shared-vue-components--composables-plugin","l":"Example Shared Vue Components / Composables Plugin","p":["It is recommended to prefix your plugin with ui when it's components and composables"]},{"l":"Disabling Plugins","p":["If you wish to disable a plugin simply add a ! before the folder name.","Alternatively you can add a file named .disable to the plugin folder to disable it."]},{"l":"Adding Dependencies","p":["If you noticed a plugin can use npm packages for the webview or server.","It is recommended to avoid using packages where possible to keep everything 'future proofed'","Simply add a dependencies.json or package.json to your plugin folder.","Add a section called dependencies and it will automatically install the dependencies the next time you run your server."]}],[{"l":"Plugin Structure","p":["If you wish to create plugins then you need to understand the basic structure of a plugin.","Create a folder inside src/plugins and name it something unique","Create these additional folders under the new folder you created (not all are necessary)","client","images","server","sounds","translate","webview","dependencies","shared","rmlui","fonts"]},{"l":"client","p":["This is where the client-side code belongs. You cannot use NPM packages in these files.","Ensure that you create an index.ts file as an entry point for your client code."]},{"l":"server","p":["This is where server-side code belongs.","Ensure that you create an index.ts file as an entry point for your server code."]},{"l":"shared","p":["This is where shared code (constants, events) belongs. Code below is just example. In shared folder you can store anything you want, that is used by both, clientside and serverside code."]},{"l":"images","p":["Images are any images with the following extensions: jpg, jpeg, png, bmp, svg, webp.","Additionally, the images are loaded as an asset-pack and copied to the webview/public/images folder as well.","Image paths are absolute so if you put an image in the images folder then your html path will be ./images/myplugin-myimage.png.","If you need the image for rmlui then your path will be http://assets/images/myplugin-myimage.png.","Image names need to be unique for your individual plugin, otherwise they will override each other."]},{"l":"rmlui","p":["RmlUi is a way to write HTML pages with css2 support. They're highly performant, but can be hard to work with.","In Rebar we just create normal html files but abide by CSS2 support. Confused? Check out these docs.","Rmlui pages and fonts can be loaded with the following paths:","@rmlui/plugins/your-plugin/index.rml","@rmlui/plugins/your-plugin/font.ttf","That being said, create a file under the path plugins/your-plugin/rmlui/index.html or whatever you want, and add the following content:","You can also add custom fonts under plugins/your-plugin/rmlui as long as they're in ttf format.","If you want live previews of your html check out VSCode Live Server Extension. Once it's installed you can right-click your html file and click Show Preview to preview it in VS Code!"]},{"l":"sounds","p":["Sounds are custom .ogg files that can be played as an asset using the Rebar.player.useAudio function.","Additionally, the images are loaded as an asset-pack and copied to the webview/public/sounds folder as well.","Here's a simple example of playing a sound called myplugin-test.ogg which is in the sounds folder."]},{"l":"Server Sound"},{"l":"Webview Sound"},{"l":"translate","p":["Translations can be used on client-side, server-side, or webview as long as you import the translation file."]},{"l":"webview","p":["Webview pages should always have unique names that differentiate from other plugins. Ensure you give your vue file a unique name."]},{"l":"Extending built-in interfaces","p":["Imagine, you want to add a new attribute to already existing document, like Vehicle.","To not rewrite Rebar's interface, you can use this approach:","This approach will allow you to use defined keys everywhere.","After that, in any plugin, you'll be able to use:"]},{"l":"Dependencies","p":["If you noticed a plugin can use npm packages for the webview or server.","It is recommended to avoid using packages where possible to keep everything 'future proofed'","Simply add a dependencies.json or package.json to your plugin folder.","Add a section called dependencies and it will automatically install the dependencies the next time you run your server."]},{"l":"fonts","p":["Fonts are any files with the following extensions: otf, ttf.","Additionally, the fonts are loaded as an asset-pack and copied to the webview/public/fonts folder as well.","Image paths are absolute so if you put an image in the fonts folder then your html path will be ./fonts/myfont.ttf.","If you need the image for rmlui then your path will be http://assets/fonts/myfont.ttf."]}],[{"l":"Your First Plugin","p":["This tutorial is meant to show you how to get an incredibly basic plugin running.","It will not show you how to use the API, or anything else. It's strictly to show you how to setup a plugin."]},{"l":"Preface","p":["If you are not familiar with programming, please make sure to check out Basic Programming before starting.","Even having just a small understanding of programming will help immensely."]},{"l":"Client Setup","p":["Before starting, make sure you have alt:V Installed and modify the altv.toml to turn debug to true.","You can read more about that here."]},{"l":"Folder Setup","p":["Open the entire Rebar Folder in VSCode. You should see a file tree on the left with all of your files."]},{"l":"Accessing Plugin Folder","p":["Navigate based on the following folders:"]},{"l":"Create a New folder","p":["Create a new folder by right-clicking the plugins folder and making one.","Name the folder whatever you want, but it needs to be in English.","For the sake of this tutorial, I named mine a-cool-plugin."]},{"l":"Create 2 New Folders","p":["Create 2 new folders inside of a-cool-plugin and name them server and client."]},{"l":"Create 2 New Files","p":["You are going to now create 2 files named index.ts inside both server and client."]},{"l":"Setup TypeScript Files","p":["Now that you have your files created, we need to add some content to both of them.","Make sure to save your files after editing them!","CTRL + S will save your file."]},{"i":"serverindexts","l":"server/index.ts","p":["Inside of this file add the following contents."]},{"i":"clientindexts","l":"client/index.ts","p":["Inside of this file add the following contents."]},{"l":"Testing the Plugin","p":["In VSCode at the top, click on Terminal and then click New Terminal.","Simply run pnpm dev to start your server.","You will then see that your plugin has loaded, and you'll have some logs in your server console.","Additionally, you can see the result in your client console in-game which can be opened with F8."]}],[{"i":"what-is-a-webview","l":"What is a Webview?","p":["A Webview for this framework may also be known as a page.","Pages are HTML content that can be used to render user interfaces in-game.","Rebar has the concept of 3 different types of Pages.","Overlay","Persistent","Page"]},{"i":"what-is-a-page","l":"What is a Page?","p":["A page is a type of page that is only shown once, and controlled by user interaction.","Examples: Inventory, ATM, Shops"]},{"i":"what-is-the-overlay-type","l":"What is the Overlay Type?","p":["An overlay page is a type of page that is always shown when the user is not shown a page.","Examples: HUD, Cash, Ammunition Count"]},{"i":"what-is-the-persistent-type","l":"What is the Persistent Type?","p":["A persistent page is a type of page that will always be shown regardless of what is being shown on screen.","Examples: Website Watermark, Logo"]},{"i":"what-css-is-available","l":"What CSS is Available?","p":["Currently Rebar is shipped with TailwindCSS to quickly build out interfaces quickly.","It is highly recommended to install the Tailwind CSS IntelliSense Extension when working with css.","You can simply hit CTRL + SPACE to bring up auto-fill while browsing different CSS classes."]}],[{"l":"Create a Webview","p":["First, make sure you've created a plugin.","If you are using Visual Studio Code, make sure to install the Vue extension","Create a .vue file, and create a basic Vue 3 template."]},{"l":"Preview the Page","p":["You can preview the page by running the following in a terminal.","You can open http://localhost:5173 in your browser to view the page.","Click the Arrow in the Top Right and then click on your page to see it rendered."]},{"l":"Showing in-game","p":["You can actually show a page from the server-side using the player webview functionality.","However, this section will show you how to do both client and server side.","When you show a page both the cursor and webview focus will happen automatically."]},{"l":"Server Side","p":["Just ensure that you run the server once to populate the available pages."]},{"l":"Client side","p":["That's all it takes to show / hide your custom WebViews."]}],[{"l":"Draggable Component","p":["The draggable component is a built-in component that allows you to wrap up any code to make it draggable.","This is a one-stop solution for building moveable inventories, and drag & drop interfaces.","The most important part of a draggable component is that it contains an id.","This is what helps the draggable element decide what to send back.","Did you know that in alt:V we don't have access to HTML5 Drag APIs, that's why this exists."]},{"l":"Example Page","p":["This is an example page showing 2 draggable divs that can be dragged over each other.","They print their status into the console."]}],[{"l":"useAudio","p":["Gives you the ability to play custom sounds from the Webview.","If you wish to play frontend sounds check out the Frontend Sound List."]}],[{"l":"useEvents","p":["This is an event wrapper that allows for communication directly to the server, or the client."]},{"l":"Server Side RPC Handling","p":["If you use the event emitServerRpc you can use the normal alt.onRpc to handle the request.","A simple but seamless integration with existing alt:V APIs."]},{"l":"Client Side RPC Handling","p":["This one works differently on client-side, so you'll have to access the useWebview function, and then add your listener callback."]},{"l":"Key Presses","p":["If you're trying to listen for certain keypresses regardless of focus you can use onKeyUp and offKeyUp.","Generally you want to bind onKeyUp with the onMounted event, and turn off the key listener with offKeyUp when unmounting."]}],[{"l":"useLocalStorage","p":["A way to store local data to the alt:V Client."]}],[{"l":"useMessenger","p":["Gives the ability to get messages from the messenger system as well as emit messages to the messenger system."]}],[{"l":"useMinimap","p":["Gets minimap positional data and makes it available in the Webview.","Below is an example of how to move some text next to the minimap.","It will automatically update the minimap positional data when resolution is changed."]}],[{"l":"usePlayerStats","p":["This specific composable is for gather information from client-side, and rendering it in the WebView.","Here's an example of how to use it."]}],[{"l":"useSyncedMeta","p":["When using the Stream Synced Binder, this webview component allows you to get that data as vue refs."]}],[{"l":"Code Examples","p":["This is a giant page for code examples and a general purpose cookbook for writing just about anything.","Always check the documentation for further information and to see the full extent of what this framework has to offer.","Some of these code examples require other plugins to work.","Check out Plebmasters Forge to see all available plugins."]},{"l":"Server API","p":["We mostly work on the server-side for a majority of the functionality.","Here's how to import Rebar in various ways."]},{"l":"Notifying a Player","p":["Send a default GTA:V notification to the player."]},{"l":"Screen Shards","p":["Shards are like the Mission Failed full screen effect that you see in normal GTA:V. You can show them like this."]},{"l":"Screen Mission Text","p":["Mission text will show in the bottom center of the screen."]},{"l":"Keybinds","p":["Keybinds can be done on server-side to allow for server-side callbacks.","Here's a simple keybind that when K is pressed it teleports the player to a position."]},{"l":"Interaction Points","p":["Interaction points are places where the player can press E to do something.","They can be accented with markers, text labels, and blips.","There are also local versions of marker, text label, and blips to only show it to a single player. Which has full control via server-side."]},{"l":"Server Configuration","p":["You can modify server configuration by creating a plugin that tweaks the settings.","Here's an example of what you can invoke to change settings in Rebar."]},{"l":"Saving Player Data","p":["With a character select plugin, and auth plugin installed it's really easy to write data to the database using the document system.","This document system also exists for other entities like Vehicles,and Accounts."]},{"i":"character--account-permissions","l":"Character & Account Permissions","p":["There's a built in permission system to assign players as admins, specific jobs, etc."]},{"l":"Registering Commands","p":["With a chat plugin you can register commands and invoke them in-game in the chat window.","Additionally, you can protect your commands from being ran under Account Permissions or Character Permissions."]},{"l":"Assigning Custom Models","p":["You can easily assign a custom player model to override their default character appearance."]},{"l":"Assigning Uniforms","p":["You can also assign and clear uniforms for the player to wear."]},{"l":"Owned Vehicles","p":["Vehicles can be owned by an individual player, or a permission."]},{"l":"Spawn Owned Vehicles","p":["Want to easily spawn vehicles owned by a player, well Rebar makes it super simple.","It even handles synchronizing mods, extras, lock state, engine damage, and more."]},{"l":"Teleport to a Waypoint"},{"l":"Control Pedestrians","p":["We have a built in pedestrian controller on server-side that lets you invoke natives to easily make pedestrians do various things.","Here's one that makes a bunch of them dance together."]},{"l":"Raycast for Objects","p":["Raycast for an Object from server-side."]}],[{"l":"VSCode Transmitter","p":["Rebar has built in support for the Rebar Transmitter extension.","This allows you to open a scratchpad under src/scratchpad and write code.","Once the code is written you can SELECT THE CODE WITH YOUR CURSOR and then right-click to execute it while the server is running."]},{"l":"Instructions","p":["Open src/scratchpad folder","Rename both of the example pads to serverExample.ts and clientExample.ts","Write some code in the scratch pad","Highlight it","Right-click it, and execute it"]},{"l":"Example"},{"l":"Download","p":["https://marketplace.visualstudio.com/items?itemName=stuyk.rebar-transmitter"]}],[{"l":"Chapter 1. Preface"},{"i":"do-i-need-to-know-how-to-program","l":"Do I need to know how to program?","p":["While it is recommended to know how to program a little bit, I started programming with zero knowledge doing stuff for Fallout 4 with Papyrus, and then moving to GTA:V with C#, and now TypeScript. I believe that the fastest way to learn something is keep trying and failing at it until you fully understand what you are doing.","Programming is a skill, and in order to train that skill you need to put time in to learn. This book is going to act as a way for you as a user without very much programming knowledge, to stumble through and build some plugins.","You'll be able to tweak little bits of code from this book to get a better understanding of what they are doing.","Remember to take breaks, and keep coming back every day to learn a bit more each time."]},{"i":"what-is-altv","l":"What is alt:V?","p":["alt:V is an advanced multiplayer modification framework specifically designed for Grand Theft Auto V (GTA V). It empowers developers to craft custom multiplayer experiences by offering a robust platform and comprehensive API for scripting and extending the game. With alt:V, you can create unique game modes by writing both server-side and client-side code."]},{"i":"what-is-rebar","l":"What is Rebar?","p":["Rebar is a plug-and-play base framework for the alternative GTA:V multiplayer client alt:V. Rebar is meant to act as a light framework that provides utility, and a basic standard for building plugins that can be compatible with other plugins. It has a heavy focus on simplifying building game modes and lowering the friction of building a server.","Rebar is the foundational piece necessary to construct large concrete structures. Think of this framework as achieving the same from a game-mode standpoint."]},{"i":"how-do-these-two-come-together","l":"How do these two come together?","p":["Rebar is built on top of the alt:V JavaScript module, leveraging TypeScript, Node.js, Vue 3, and Tailwind CSS to establish a standardized plugin system. This system encourages developers to create plugins in a specific format, ensuring compatibility across the entire framework. Designed to enhance and expedite the development process, Rebar simplifies the implementation of complex features such as database interactions, world object interactions, and interactive player menus. Rebar streamlines the creation of sophisticated functionalities, making development more efficient and consistent.","If you're familiar with ESX or QBCore, Rebar is the ESX or QBCore equivalent for alt:V."]},{"i":"why-was-rebar-made","l":"Why was Rebar made?","p":["Originally, when I began working on multiplayer frameworks, I created one called OpenRP. It quickly became clear that this framework was struggling due to its mature codebase being written entirely in JavaScript, lacking the type safety provided by TypeScript. After a year, I decided to abandon OpenRP and shift my focus to a new project named Athena.","Athena was developed over three years and underwent numerous iterations, all while incorporating TypeScript for enhanced type safety. Despite reaching a point of stability, Athena faced significant challenges: it was difficult to work with, and plugin developers were reluctant to release open-source content. It became apparent that Athena was not the right framework for its time.","In 2024, I created Rebar in less than two months. Rebar integrated the best aspects of Athena, including its plugin system and Vue 3 SPA support, and significantly enhanced them. This new framework allows for the majority of server development to be done on the server-side, which is crucial for security.","Rebar's design addresses the issues faced by its predecessors, making it a more robust and developer-friendly solution."]}],[{"l":"Chapter 2. Dependencies","p":["With every great project comes a list of dependencies and things you will need to get started. All of the dependencies below are required and you will need to obtain the necessary software to follow this book."]},{"l":"Windows Terminal","p":["If you don't already have it, obtain Windows Terminal. Windows Terminal will allow you to run various commands from... the terminal.","This means that while you are working with alt:V and Rebar, you will be asked to run commands in a terminal.","You can open a terminal by typing terminal into your Windows Search."]},{"l":"Terminal Tip","p":["If you want to get access to your terminal quickly, pin it to your task bar."]},{"l":"Programs to Obtain","p":["alt:V Multiplayer Client","git","GTA:V Video Game, from one of these platforms","https://altv.mp/","https://code.visualstudio.com/download","https://git-scm.com/downloads","https://nodejs.org/","https://pnpm.io/installation","https://store.epicgames.com/en-US/p/grand-theft-auto-v","https://store.steampowered.com/app/271590/Grand_Theft_Auto_V/","https://www.mongodb.com/try/download/community","https://www.rockstargames.com/gta-v","If you have node.js installed you can just run npm install -g pnpm in a terminal","Keep in mind that pirated copies of GTA:V are not supported","MongoDB Community Server","Node.js v20+","pnpm","This client is for connecting to alternative servers outside of GTA:V itself","VSCode","When you install this program, use all of the default settings.","Windows 11","You can verify the installation by checking the Services tab of your Task Manager","Your operating system should be Windows 11, or greater and you should install these programs in the order they are listed."]},{"l":"Checking Installation"},{"l":"git","p":["Open a Terminal, and run the following command to verify git is installed.","If successful, you will see the git version printed to the console."]},{"i":"nodejs","l":"Node.js","p":["Open a Terminal, and run the following command to verify node.js is installed","If successful, you will see the git version printed to the console."]},{"l":"pnpm","p":["Open a Terminal, and run the following command to verify pnpm is installed"]},{"l":"MongoDB Community Server","p":["Open your Task Manager by right-clicking your task bar at the bottom of your screen, and navigating to the Services tab.","Search for mongodb in the top bar, and verify that the status is Running."]},{"l":"VSCode","p":["You can verify VSCode is installed by searching for the application in your Start Menu. Simply type VSCode, and try opening the program by clicking on it. Ensure that it boots up, and runs correctly."]}],[{"l":"Chapter 3. Project Setup","p":["Now that we've obtained all the necessary programs to get started with development, we can begin with setting up our project."]},{"l":"Cloning the Repository","p":["Cloning a repository means you're going to download some source code from a GitHub website, in the case here we'll be cloning the Rebar repository into some location on our computer. For the sake of this book, I'm cloning the repository into a separate disk D: drive under the location D:/projects/rebar-altv.","Right-click the base folder where you wish to clone the repository, and click Open in Terminal. This will open the terminal in the current directory that you have open.","** Ensure you do not clone it to any folders with spaces, or special characters. **","Now run the follow command in the Terminal to clone the repository.","You may or may not be prompted to make a GitHub account, if you are. Make one and sign into it."]},{"l":"Navigate to Repository","p":["In the same Terminal you are going to cd into that directory.","cd means you are going to navigate into the directory from the Terminal."]},{"l":"Install Dependencies","p":["You are now going to use the Terminal to install dependencies for Rebar.","If you hit an error during any of this setup, please visit the Rebar Discord. You can find a link to the Discord on the main Rebar page.","If successful, you will install and do the following with one command:","npm packages used by node.js","alt:V Server Binaries for Windows","Compile the Code Once","Here's an example of a successful installation."]},{"l":"Running the Server","p":["With that all said and done, we will be using the Terminal to Start and Stop the server. We want to verify that everything is loading correctly throughout the entire framework.","We'll be using dev mode to ensure the server starts. Use your Terminal to run the following command.","Your console should output a similar output to what you see below, if all resources are Loaded then you are successful!","Additionally, when you start modifying source code your development server will automatically reload and reconnect your game."]},{"i":"configuring-altv-client","l":"Configuring alt:V Client","p":["When you are working on a server, you are more often than not going to want to run your alt:V client with debug set to true.","Open your alt:V Client folder where it's installed. Usually it's under the following path:","Open altv.toml in VSCode, you can do this by right-clicking the file and clicking Open with Code.","Make sure to SAVE THE FILE and then restart your alt:V client."]},{"l":"Connecting to the Server","p":["Once you have the server running in the above steps, you can Direct Connect to your server with the following IP by opening the alt:V Client and using the in-game interface to connect to your server.","Additionally, you may not see anything when you connect, or be able to do anything. Rebar does not spawn you into the game, and we just want to verify that we can connect to the server.","If you are having trouble connecting, visit the alt:V Discord on the main website, and ask for help"]},{"l":"Shutting Down the Server","p":["In the same terminal where you are running the server, click on it, and simply press CTRL + C multiple times to kill the server.","If you need to clear the console of all text you can use CTRL + L to clear the console."]},{"l":"Recap","p":["When we want to run the server we open a Terminal and type:","When we want to shut down the server we press CTRL + C while focused on the Terminal.","When we want to clear the Terminal we press CTRL + L while focused on the Terminal.","Additionally, if you wish to run the server in production mode you can use:"]}],[{"l":"Chapter 4. Opening the Source Code","p":["Now that we've covered starting and stopping the server, it's time to get into the source code. This part may be incredibly overwhelming for people who have never programmed anything before. You are going to see a lot of files, and a lot of confusing controls.","I'll try and cover what you're seeing in this section as much as possible so that you can move forward with ease.","Let's begin."]},{"l":"How to open the codebase","p":["Where you installed the core of rebar, you can right-click the folder and Open with Code. This will open the whole folder in VSCode and give you a giant file tree, with a big window in the center.","Here's an example of what that looks like."]},{"i":"what-are-you-looking-at","l":"What are you looking at?","p":["Under Explorer is your File Tree for the whole folder. This is what makes Rebar come together.","In the center of the screen is likely a Welcome Screen and usually a Text Editor to modify source code."]},{"l":"Open a Terminal in VSCode","p":["The menu at the top left is going to let you access various options.","If you open the ... menu, or click on Terminal you can open a Terminal inside of VSCode.","Get used to doing this, it's really useful to have a Terminal Open in VSCode."]},{"l":"Setup VSCode for Rebar","p":["One of the first things you are going to do is open the Extensions tab on the left side. It's the 4 squares.","Install the following extensions, insert their ids into the search bar:","mongodb.mongodb-vscode","esbenp.prettier-vscode","YoavBls.pretty-ts-errors","Vue.volar","bradlc.vscode-tailwindcss","You will not likely notice anything after installing these extensions, this is just to set us up for later."]},{"l":"Recap","p":["We have now opened the code base, and we can begin looking into working with Rebar. Especially if we want to make our first plugin.","You learned how to open a Terminal in VSCode, and install extensions.","Additionally, you can try running the server from inside VSCode to see if it starts.","Make sure to close your previous instance in the other Terminal."]}],[{"l":"Chapter 5. Your First Plugin","p":["Now that we've gotten this far, we can write our first plugin for Rebar. Pay close attention to what you're doing and try to follow the images and text as closely as possible."]},{"l":"Create your Plugin Folder","p":["Run the following command(s) in your Terminal:","Alternatively, feel free to use the file tree to create your plugin under the src/plugins folder."]},{"l":"Create your Index Files","p":["Index files are the main entry points for both server and client. We are going to create an index.ts file in both directories.","Run the following command(s) in your Terminal, and press Enter again after entering it:","Alternatively, feel free to use the file tree to create your index.ts files under the src/plugins/my-first-plugin folders.","Here's a preview of what you should have as a folder structure."]},{"i":"setup-serverindexts","l":"Setup server/index.ts","p":["Inside of our server/index.ts file we're going to need to add some source code. Copy and paste the following code to get the initial setup ready."]},{"i":"setup-clientindexts","l":"Setup client/index.ts","p":["Inside of our client/index.ts file we're going to add some client source code. Copy and paste the following."]},{"i":"run-the-server","l":"Run the Server!","p":["Run your server, and you can do that by running the following in a Terminal.","While this may not seem like much for our first plugin, it will print some data to your client console F8 in-game.","We can also find the printed data in our server console as well.","If you are successful, you will see Hello from server! printed in the console."]}],[{"l":"Chapter 6. Expanding the Plugin","p":["The next stage of our plugin is going to be spawning the player. While Rebar does come with plenty of plugins to handle this, we're going to be going from scratch to get a better understanding of how to work with Rebar as a whole.","Let's go ahead and spawn the player when they connect to the server."]},{"l":"Spawn the Player","p":["Modify the server/index.ts file for your plugin.","You are going to create an alt.on event which will be triggered when the player connects to the server.","We'll then spawn the player with the model mp_m_freemode_01"]},{"l":"Verify Results","p":["Head in-game and verify that you spawn at the given location, and you have a model loaded for your player. At this stage you should be able to move around in-game and walk around in an empty world."]},{"l":"Give the Player a Weapon","p":["Let's modify that source alt.on event so that when they spawn it also gives them a gun. Here's a few weapon models you can use.","WEAPON_GRENADELAUNCHER","WEAPON_BATTLEAXE","WEAPON_RAYPISTOL","Let's add one weapon first, and then you can modify the source code to add all of them."]},{"i":"verify-results-1","l":"Verify Results","p":["Head in-game and verify that you can select weapons with Tab and you can shoot those weapons as well."]},{"i":"wait-a-minute","l":"Wait a Minute!","p":["We're already writing some basic code to do some basic things in-game. Yet you may have no idea what kind of code you're writing and what that code does.","While, it may seem like we're reading plain English, our next section is going to explain more about how programming works.","For now, this is just a taste of what we'll be able to do soon enough."]}],[{"l":"Chapter 7. Programming","p":["In our previous section we created our first plugin, spawned a player, and gave them a weapon. In this section, we're going to learn how to do some basic programming, and how to know what to type based on the patterns you're seeing.","Don't try to overthink what you're seeing here in this section, you may need to come back to it for a refresher or maybe you need a little more help by looking at some more examples.","What is important is that you give it time, and practice often. You obtain nothing if you do nothing.","Do or do not. There is no try.","- Yoda"]},{"l":"Basics","p":["Variables are the bread and butter for programming, variables store different data types. We've already used one variable to store an alt.Vector3 inside of it.","But variables can store just about anything inside of them. Here's a few examples of what that looks like for types like strings, numbers, objects, interfaces, and arrays."]},{"l":"Variables","p":["Variables can be declared as let or const depending on what is needed.","If the value is not meant to change, we use const. If the value is meant to change we use let."]},{"l":"Strings"},{"l":"Numbers"},{"l":"Booleans","p":["Booleans are a great way to see if something is true or false."]},{"l":"Objects","p":["Objects can be incredibly complex, so this is just the basics of declaring and modifying them."]},{"l":"Interfaces","p":["While objects are great, they aren't great without an interface. An interface lets you determine the expected structure of ran Object."]},{"l":"Arrays","p":["Arrays are a group of strings, objects, numbers, or other types. They are often represented by a type []"]},{"l":"If Statements","p":["If statements can be seen as your logical operators to help make your code do certain things. It's effectively like stating if you have a chocolate bar, do you eat the whole thing now, or do you eat it later. Then you tell the computer exactly what to do with the chocolate bar."]},{"l":"Functions","p":["Functions allow you to put re-useable code together to be called multiple times."]},{"l":"Camel Casing","p":["When you are declaring variables you should always camelCase them. This means that the first word is always lowercase, and all words thereafter are capitalized. likeThisReallyLongSentence.","However, this is just a general rule for JavaScript, and TypeScript. Try to abide by it so others can read your code quickly."]},{"l":"Function Scope","p":["Scope determines where certain variables and functions can be logged or executed."]},{"l":"Global Scope","p":["Variables declared outside any function or block","Accessible from anywhere in the code"]},{"i":"function-scope-1","l":"Function Scope","p":["Variables declared inside a function using let, or const","Accessible only within that function"]},{"l":"Block Scope","p":["Variables declared inside a block (e.g., {}) using let or const.","Accessible only within that block."]},{"l":"Recap","p":["Global Scope: Accessible anywhere","Function Scope: Accessible only within the function","Block Scope: Accessible only within the block","Understanding these scopes helps manage variable accessibility and avoid bugs."]},{"l":"Intellisense","p":["If you are not sure what intellisense is, it's the little helper in your text editor that will sometimes pop-up with suggestions.","Here's a picture of what that looks like.","There's a lot of confusing icons, and strange symbols throughout the entire suggestion. Let's break it down so you can understand what you're looking at more.","As you can see in the above image, it clearly explains what each icon is and what their name is. Now let's break down how each one of those works. Let's take a look at some common examples from alt:V."]},{"l":"Class Type","p":["Now we're going to focus on alt.Vehicle which is a class. A class can be described as a little orange tree with roots.","Usually when you see a class it needs to be be instantiated with the new keyword.","Let's take a look at what that may look like.","You can also see that our parameters are now matching perfectly.","It expected the following based on the screenshot above...","model of string type,","pos of alt.Vector3 type,","rot of alt.Vector3 type.","Remember that a ? means the argument, variable, or property may be optional"]},{"l":"Property Type","p":["Properties are always assigned with an = sign. A property can be described as a small low blue box.","As you can see above we see two properties, headRot and health. We're focusing on health though."]},{"l":"Function Type","p":["Functions usually require using () to make them function. The icon is often a large purple box.","When you open up the function with () you will get additional intellisense hints.","As you can see above it will take a string or number, number for ammo, and a boolean for equipNow.","Functions can also sometimes return data when executed, take a look at this player.getEyeColor() function.","That last parameter which says : number is the expected ReturnType for the function. So we can assume we'll be getting a number back from the function after it's executed."]},{"i":"recap-1","l":"Recap","p":["While there's a lot to learn in programming, this will all eventually become second nature in your understanding as you proceed to work with the knowledge you've obtained every day. You must practice programming to be good at programming. It is a skill that can only be obtained by writing code, and dealing with the bugs."]}],[{"l":"Chapter 8. Exercises","p":["In the last section we learned all about programming, and got a basic understanding of reading code, and how the VSCode intellisense works. Now in this section we're going to explain a problem, and you're going to try and build a solution. They'll be fairly straight forward exercises but it'll help with understanding the code a bit more."]},{"l":"Spawn a Vehicle"},{"l":"Problem","p":["Given the code in the last section, there was a section on creating a vehicle. Spawn a vehicle and then use the setIntoVehicle function on the player and pass the vehicle and seat 1 which is the driver seat. You can spawn the vehicle when the player connects to the server.","Here's a few vehicle models: t20, akuma, infernus, washington."]},{"l":"Solution"},{"l":"Flip Between Spawns"},{"i":"problem-1","l":"Problem","p":["Given the two positions below and some code, use them to teleport each player who joins the server to a different spawn.","You can use a boolean to switch between both positions."]},{"i":"solution-1","l":"Solution","p":["You can verify this solution by typing reconnect in the F8 in-game console menu."]},{"l":"Randomized Weapons"},{"i":"problem-2","l":"Problem","p":["You want to randomly give each player a weapon when they connect to the server.","Given the following list of weapons, use it to randomly give a player a weapon.","Additionally, you can generate a random index for an array like this.","Use the index to distribute a weapon to the player."]},{"i":"solution-2","l":"Solution"}],[{"l":"Chapter 9. Free for All Death Match Gamemode","p":["In this chapter we're going to build a very basic version of a free for all death match. It's going to require very little code, and in this section I'll provide a handful of positions and code to help you build this faster.","Death Match is perhaps one of the easiest game modes to write, and gives a firm understanding of spawning and death mechanics."]},{"l":"Respawn System"},{"l":"Spawn Positions","p":["All of these positions are located in a subway station."]},{"l":"Spawn Randomly","p":["Using some of the code we did in the excercises we can randomly spawn a player to a random position","Let's create a function to do that for us."]},{"l":"Handling Death","p":["When we get killed, or when a player dies. They'll need to be respawned. We can use the alt event for playerDeath to handle that, and use the spawnPlayer"]},{"l":"Giving Weapons","p":["Now our next step in this process is making sure that all of the players are armed for this free-for-all death match. Let's go ahead and give each player a random weapon when we call the spawnPlayer function."]},{"l":"Testing Time","p":["Now you can go in-game and test to make sure it works. If you want other players to join consider checking out this Tutorial on playit.gg Tunneling which will allow you to port forward for alt:V without port forwarding your router, and windows firewall.","If you wish to port forward your router, and firewall you need to open port 7788."]},{"l":"Pickups","p":["In the previous chapter we learned the basics of writing a super simple game mode. However, this next chapter is going to start covering some enhancements that we can add to our free-for-all death match game mode. Which in this case will be weapon pickups.","First thing we're going to check is if we have Rebar available and imported into the free-for-all game mode.","Make sure this is located at the top of your server/index.ts file."]},{"i":"what-is-a-pickup","l":"What is a Pickup?","p":["Pickups will allow you to listen for when a player walks over a given point, and then we can give them a weapon. They're often seen as a hovering weapon that will invoke a function when walked over. Let's build one.","They're found under the Rebar.controllers. pathway when writing code."]},{"l":"Pickup Positions","p":["Here are two pickup positions we can use to create a pickup with."]},{"l":"Create the Pickup","p":["Below we're going to great a pickup based on a specific weapon type. Intellisense will hint you at the available pickups for you to utilize in your pickup creation."]},{"l":"Listen for the Pickup","p":["Next we're going to tack on a .on function to the usePickupGlobal. When we create a pickup it will return a handful of functions we can use and on just so happens to be one."]},{"l":"Verify the Pickup Works","p":["Next step is verifying that the pickup works. Go ahead and head in-game and walk over to the pickup location. The two positions are at the top of the subway platform."]},{"l":"Notifying the Player","p":["Now that we have the player picking up a weapon, we can also let them know they've picked up the weapon.","We can do this by slightly modifying the pickup controller."]},{"l":"Markers","p":["Now that we've messed with some pickups, let's really show the player that the pickup's are there, and we can do that by using markers.","Markers are effectively colorful holograms to show a player something in the world."]},{"l":"Marker Positions","p":["We'll be using the same positions from the last section, but we'll be subtracting 1 from the z position."]},{"l":"Building a Marker","p":["Markers have various types, and you'll see that when you fill in type with the string type, intellisense will give you more hints.","Look at that, now we have a nice marker to really draw the player to the location."]},{"l":"Interactions","p":["Interactions require the player to press the E key in-game for something to happen. They're effectively a super simple way to trigger a certain function when the key is pressed.","In this section we're going to build an interaction to use the elevator in the game. It will simply teleport the player from the top to the bottom of the subway station."]},{"l":"Interaction Positions"},{"l":"Teleport to Top","p":["First thing we're going to do is use the Rebar.controllers to create an interaction.","After creating the interaction, we're going to listen for when it is interacted with.","Once the player has interacted with the top elevator position, we'll move them down to the bottom position.","Additionally, we're going to use a cone marker to show the player the entry point."]},{"l":"Teleport to Bottom","p":["Now we're going to create the bottom elevator code, and it's going to utilize pretty much the opposite positions that we used above. Feel free to try writing it on your own before using the code below.","We'll build the interaction first."]},{"l":"Text Labels","p":["Now that we've created an elevator, our next step is going to be adding some text labels to elevator positions to really let the player know that they can press a key to go up and down the elevator.","We're going to use the Rebar.controllers pathway to build some new Text Labels."]},{"l":"Elevator Up Label","p":["Labels require passing a position, and some text."]},{"l":"Elevator Down Label","p":["We'll do the same as above, but we're just going to change the position."]},{"l":"Timers","p":["There are a lot of cases where you want something to happen after a certain period of time. Let's say that we only want the Railgun to be available every 15 seconds after it's picked up.","What we're going to do is make it so that when the Railgun is taken, it will destroy itself, and then it will create a timer to respawn the Railgun after 15 seconds."]},{"l":"Pickup as a Function","p":["We're going to adjust the existing Railgun code, and change it as follows."]},{"l":"Respawn the Railgun","p":["We will now modify the pickup.on callback to call the createRailgun after 15 seconds."]},{"l":"Spawn the Railgun","p":["Finally, we just need to call createRailgun somewhere in the file to create the initial railgun.","You can likely put this at the end of your file."]},{"l":"Recap on Death Match","p":["In this section you learned about working with player connections, respawning, weapon pickups, markers, interactions, text labels, and timers. All of these functionalities are core to building almost anything with Rebar.","However, this is for a non-persistent game mode. Meaning that nothing is saved.","This chapter was simply a primer to building larger more complex features."]}],[{"l":"Chapter 10. Authentication Plugin","p":["Authentication is our next big ticket item for doing anything with the Rebar Framework. While there are a handful of Authentication plugins out there, I believe it's incredibly important to learn and understand how Authentication works.","We're going to be building a single account, and single character login system.","It will simply take a username, and a password to register and account."]},{"l":"Before Beginning","p":["If you followed the previous tutorial on death match, please add a file called .disable to your death match game mode folder.","This will disable that plugin from loading."]},{"l":"Create a New Plugin","p":["You're going to create a new plugin folder called authentication. You are going to create 2 folders inside of it.","server","webview","Go ahead and create the index.ts file inside of plugins/authentication/server/. We will come back to work on the webview folder later in this tutorial when we're ready."]},{"l":"Setting up the Camera","p":["We're going to immediately throw the player into the sky when they join the server. As well as change their dimension, and freeze them.","We'll be using a combination of alt:V functions, and properties. As well as Rebar functions.","Here's exactly what we're going to do so you can understand:","Move the player position way up high","Freeze the player","Set the player invisible","Set the player's dimension, to a larger dimension Hiding the player from the default dimension","Wait 1 second for everything to process","Freeze the player's gameplay camera in place"]},{"l":"Handle Player Connect"},{"l":"Move the Player Up"},{"l":"Freeze the Player"},{"l":"Make Player Invisible"},{"l":"Change Dimension"},{"l":"Freeze Gameplay Camera"},{"l":"Result"},{"l":"Server Config Settings","p":["Additionally, we're going to add a server configuration setting that will automatically hide the radar in the bottom left when any WebView page is open. This can be done anywhere outside of the player connection function. Make sure it's outside of it."]},{"l":"Building a Page","p":["Our next step is going to be creating a Vue Template which is ideal for creating user interfaces. Our first step is going to be opening the plugins/authentication/webview folder and creating a unique page name. Like... Authentication.vue."]},{"l":"Loading the Page","p":["Head back over server/index.ts and we'll use the WebView functionality in rPlayer to show the page to the user. You may need to run the server once before the pages show up."]},{"l":"Blur the Screen","p":["We're also going to blur the screen so it's a little more pleasing to look at."]},{"l":"Disable the player controls","p":["Since we don't want the player to accidentally opening the pausemenu if their Username or password contains the letter 'P' we're going to disable the controls. Just remember to enable them again, when releasing the player into the world."]},{"l":"Initial Result","p":["You should see a hello world in the top-left of your screen."]},{"l":"Building a Form","p":["We're going to need to modify the Authentication.vue and make it act as a form. We'll be utilizing a little bit of Tailwind CSS to make the form take form."]},{"l":"Before Building","p":["Instead of building in-game and seeing previews every time you reconnect. We actually have a utility command in Rebar that will let you do all of this work out of the browser. Open up a terminal where Rebar is located, and run this command.","This will open up a server on http://localhost:5173/ which you can open in your browser.","Alternatively, if you have one screen. In VSCode press CTRL + SHIFT P and type Simple Browser: Show and paste the URL when prompted. This will show the same page in your VSCode window. You can then drag the tab to the side to split the view."]},{"l":"Creating the Wrapper","p":["We need the page to take up the whole screen, but also we want to make sure it's centered.","The easiest way to do this is to apply fixed css with flex and then use centering css for the rest.","This will result in a simple black box with slight transparency, and rounded corners.","It will always take up 1/3 of the screen regardless of how large your resolution is."]},{"l":"Fill in the Wrapper","p":["We're going to add a header, two inputs, and a single button for registering and logging in."]},{"l":"Building Page Logic","p":["Our next step is going to be making all of these inputs and buttons function in a useable way. What we'll be doing is utilizing vue to handle all of the heavy lifting to make all the functionality work."]},{"l":"Binding Inputs","p":["In vue you can use a ref to bind the data to the given input box. We're going to do just that.","In the script section at the top we'll add the following:","Then we'll bind those to the given inputs with a v-model","Our resulting code should look something like this:"]},{"l":"Binding Buttons","p":["Our first step is going to be creating a simple loginOrRegister function in the script section, but we need to make it async.","We'll append the async keyword and write the function.","When you have a any div, link or even a button you can use @click to bind it to a function.","We'll add @click= to the button as an attribute.","Here's what that code should look like...","If you have it open in the browser, you can see the console output if you press F12."]},{"l":"Verifying Inputs","p":["Next we're going to simply verify the inputs for username and password. We want to make sure that each input has at least 3 letters or characters given to it before the login button does anything, and we'll invalidate everything until it's all correct."]},{"l":"Add a Boolean Ref","p":["We'll start by adding 2 new refs under username and password."]},{"l":"Build Validation","p":["We can build validation by using the watch function from vue. What this will do is that every time username and password is updated it'll call another function. This can be used to check if the length matches correctly."]},{"l":"Hide the Button","p":["We're going to show the button only when usernameValid passwordValid are set to true. We can use a v-if statement to do this.","You can now verify that this all works by typing into both boxes until the login button shows up."]},{"l":"Sanitize Inputs","p":["Now we're going to sanitize the username input further, and only allow A-Z and 0-9 in the username. We can do this by using something called Regex. Regex is a confusing little monster that validates inputs. The option below will do exactly what we need."]},{"l":"Feedback","p":["One thing we should definitely add is a feedback message for when any of the inputs are invalid.","We can do this by creating an element under each input that will complain about what is wrong.","We'll only show the feedback when the username or password is invalid."]},{"l":"Code Check","p":["We're going to just use this section to verify that your code is similar to what is below."]},{"l":"Emitting to Server","p":["We're going to use an rpc event to emit the request to the server, and get a result back. This means that when the user clicks the login / register button it will send an event to the server with their username and password and then we can verify if an account exists, or if we need to create a new account."]},{"l":"Emit to Server","p":["Modify the loginOrRegister function in the Vue file to use the Events variable to emit to the server."]},{"l":"Handle the Event","p":["On the server-side now we're going to listen for the authenticate:login event in our server/index.ts file. We can do this by using alt.onRpc as it will have a corresponding RPC event coming up from the client.","We're going to also make this RPC event async, so we can get results from our database.","Verify that you receive the input data on server-side by spamming some data into the input fields in-game."]},{"l":"Build the Registration","p":["Now that we've successfully gotten the event, we can move on to using the database.","We're going to grab our db function and use getMany to find as many documents as possible that match the username.","After we've gotten the results, if the results are = 0 we're going to register the user.","After registering the user, we're going to want to pull that document down, and get it ready for some later steps. For now we'll just print it to the server console so that we can use it later.","If you're successful you'll get something like this in your console:"]},{"l":"Build the Login","p":["Our next step is going to be handling the other pathway in which we've found a result for the username.","We're going to need to check their password against the password that exists in the database.","This part is pretty simple, as we'll be doing this below the results.length = 0 section.","We're going to get the 1st document from the results, and then check if the password matches.","That's it for both Login and Registration!"]},{"l":"Handle Login","p":["Now that we have a document for when the user either registers, or logs in we can use that document to bind it to the player in-game.","Binding essentially makes it really easy for us to write new data to an account."]},{"l":"Handling the Document","p":["We're going to create a shared async function that will handle the document and bind it to the player."]},{"l":"Building a Character","p":["Now that we've bound the account, we can use account.getCharacters() to find any characters the player might have on their account.","If you head in-game and register an account or login, you'll see an empty array logged to the console."]},{"i":"adding-and-loading-a-character","l":"Adding, and Loading a Character","p":["Now we're going to add a character to this account, because they don't have any. It's almost exactly similar to the account process but we need to provide some character data. For the sake of this tutorial we'll be using the username as the character name."]},{"l":"Final Step","p":["Lastly we need to close the page when they've logged in successfully. We can do this hiding the page we've loaded and essentially resetting everything we've done to the game from server-side.","Let's take a moment to remember that we:","Froze the Player","Froze the Camera","Changed their Dimension","Made them invisible","Blurred the screen","Disabled the controls"]},{"l":"Finish Loading","p":["Now we're going to make a function to reverse all of that, hide the page, and spawn the player somewhere.","Now we just need to add this finish function and call it wherever we bind the character. Add it immediately after binding the character.","Like this:"]},{"i":"were-done","l":"We're done!","p":["Now you can test the entire process all the way through."]}],[{"l":"useRebar","p":["The server API can be accessed through a single import.","If you want more direct imports, those are also available through your intellisense."]},{"l":"Direct Import"}],[{"l":"useApi","p":["API allows for plugins to register their own APIs and make them available globally.","However, they are limited to either server-side or client-side.","This reduces the complexity to import functions from other plugins, or export functions for other plugins."]},{"l":"How to Declare an API","p":["Ensure you have an API setup in your plugin.","Create a global declaration for your API.","Done"]},{"l":"How to Get an API","p":["This is all that's necessary to start working with other plugin APIs.","If you do not want to worry about load order. Consider the following pattern:","Using a sperate api.ts"]},{"l":"How to put the API into a seperate file","p":["If you want to write your API in a separate file like an 'api.ts' then you have to import it in your index.ts because only the 'index.ts' is loaded by default. You can then use the API in any other plugin"]}],[{"l":"useCronJob","p":["This API allows you to create timed events that happen at different intervals based on server time. Such as every 5th minute of the hour, every hour, etc.","Details on how to create the cron expression can be found in the node-cron documentation:","Cron Syntax"]},{"l":"How to create new Cronjob","p":["To create a new cron job, you need a unique name, a cron expression that defines the time of execution and one or more functions that are executed."]},{"l":"How to remove a Cronjob"},{"l":"How to add a function to an existing cronjob"},{"l":"How to remove a function to an existing cronjob"}],[{"l":"useConfig","p":["This document provides an overview of the configuration management for a Rebar server application."]},{"l":"Features","p":["Parsing environment variables.","Setting a default value if env variable was not defined.","Basic type validation - number, boolean, string (by default)."]},{"l":"Defaults","p":["Config Variable","Env Variable","Type","Default","mongodb","string","mongodb://127.0.0.1:27017","database_name","Rebar"]},{"l":"Usage","p":["Config defined as an interface, all methods covered with type hints, so you will see all variables and correct types on each method call."]},{"l":"Get config object","p":["You can get the whole config object this way:"]},{"l":"Get variable from config","p":["You can also get a specific value from config:"]},{"l":"Set new variable","p":["To be able to extend default Rebar config, you can extend Config interface this way:","After you've extended Config interface, you'll be able to use it's keys to initialize config variable against the env.","If you will try to parse not a number as number, you will get an uncaught exception:","You will get an uncaught exception here, the server won't start and you will see this in logs:","Error: Can't set auth_session_lifetime: Can't parse 'dummy', it is not a valid number"]},{"l":"Override config variable in runtime","p":["You can change variable value in runtime. Be careful with types."]}],[{"l":"controllers","p":["Controllers effectively show and allow interactions throughout the game world for your players.","Controllers pretty much make your gamemode tick by displaying a lot information such as:","Blips","Markers","Interactable Positions","Menus","Text Labels","Doors","etc."]},{"l":"Blips","p":["Create a map marker that displays an icon, and text on the map.","These are general purpose blips, if you need more robust functionality use the blip directly."]},{"l":"useBlipGlobal","p":["A global blip can be seen by all players.","Additionally, you can attach a blip to any entity like a player, or a vehicle like this."]},{"l":"useBlipLocal","p":["A local blip can only been seen by a single player."]},{"l":"D2D Text Labels","p":["These are the most performant Text Labels that exist for alt:V.","These labels are specifically built for in-world use; and provide a way to synchronize with all players or some players."]},{"l":"useD2DTextLabel","p":["This example shows a message, and then changes the text to New Text!"]},{"l":"useD2DTextLabelLocal","p":["This example iterates through images passed through the images directory."]},{"l":"Interactions","p":["Interactions allow a player to walk up to an invisible trigger and press E to interact with it.","If using player.pos for your interaction, ensure you subtract 1 from the z axis to make it usable"]},{"l":"useInteraction"},{"l":"useInteractionLocal","p":["Local interactions can only be interacted with for an individual player."]},{"l":"Markers","p":["Create a physical in-world marker that can be walked through."]},{"l":"useMarkerGlobal","p":["A global marker can be seen by all players."]},{"l":"useMarkerLocal","p":["A local marker can only be seen by a single player."]},{"l":"Objects","p":["Objects are well... objects. They're things on the map like ATMs, Boxes, etc."]},{"l":"useObjectGlobal","p":["Global objects can be seen by all players."]},{"l":"useObjectLocal","p":["Local objects can only be seen by a single player."]},{"l":"Pedestrians","p":["Peds use the internal alt:V Peds that can be synchronized by invoking a set of hand-picked natives on them.","Default behavior:","When a pedestrian dies, it's despawned after 5 seconds"]},{"l":"usePed"},{"l":"Native List","p":["These are the list of natives that are available to invoke.","This can be updated later but this is a general purpose list that should work fine with the ped."]},{"l":"Pickups","p":["Pickups are collisions you can run over with a specific weapon model.","They're traditionally seen in GTA:Online, but this is a more server-side implementation of the pickups."]},{"l":"usePickupGlobal"},{"l":"Progress Bars","p":["Progress bars allow you to convey that something is progressing over time to a single player, or to all players in the area."]},{"l":"useProgressbarGlobal","p":["These are seen by all players, and are can be seen when they are in range of the progress bar."]},{"l":"Timed Progress Bar"},{"l":"Manual Control Progress Bar"},{"l":"useProgressbarLocal","p":["These are seen by a single player."]},{"i":"timed-progress-bar-1","l":"Timed Progress Bar"},{"i":"manual-control-progress-bar-1","l":"Manual Control Progress Bar"},{"l":"Text Labels","p":["Text labels are floating pieces of text that can be seen in-game in a 3D space.","These are less performant than the D2D labels."]},{"l":"useTextLabelGlobal","p":["Global text labels can be seen by all players."]},{"l":"useTextLabelLocal","p":["Local text labels can only be seen by a single player."]},{"l":"World Menus","p":["World menus are 3D menus that can exist in the world, and can be popped up at any time.","They're meant for quickly selecting options, and getting results on either server or client-side.","In the case here, it's server-side usage.","These menus only show up for an individual player, but can be shown to many players."]},{"l":"useWorldMenu"},{"l":"Doors","p":["Doors are objects that can be opened and closed. When they are locked, no one can bypass them.","Permissions can be set on doors to allow certain players to lock/unlock them. More details about how to use permissions can be found here."]},{"l":"useDoor"}],[{"l":"useDatabase","p":["When using the database in Rebar it can be accessed from any plugin.","However, the database may only be accessed on server-side.","Use the Document system if you are updating characters, accounts, or vehicles."]},{"i":"usedatabase-1","l":"useDatabase","p":["Import the database into your plugin file, and begin using it."]},{"l":"createCollection","p":["A collection is where documents are stored."]},{"l":"create","p":["Creating data uses the create function and returns an _id to obtain the data."]},{"l":"get","p":["If you want to get a document by an _id, you can use this:"]},{"l":"getMany","p":["After creating data, if you don't have an _id and you want to find it. You can use getMany."]},{"l":"getAll","p":["It is not recommended to fetch a whole collection unless it's a smaller collection.","In any case, you can use this to fetch a whole collection of data."]},{"l":"update","p":["If you want to update a document, or simply append new data to the document."]}],[{"l":"document","p":["Documents are what are stored inside of MongoDB. Evey document has an _id which is a string of characters. That string of characters can be used to quickly pull down any document.","Documents require the developer to assign the data once, and once that data is assigned it will only push data out to the database automatically while using document functionality.","We are effectively reading data once on login, and pushing data outwards only.","Documents that are edited through the Database are not automatically updated in the server cache, they must be retrieved again to update them while the server is running."]},{"l":"Document Types","p":["A document is a set of data that is bound to a player or vehicle until they disconnect or are destroyed. It automatically saves data to the MongoDB database when any set or setBulk function is used."]},{"l":"Account","p":["Account data usually includes email, password, discord info, ban status, etc.","You should bind account data after authenticating to the server."]},{"l":"Character","p":["Character data usually includes appearance, name, clothes, inventory, money, etc.","You should bind character data after fetching call characters owned by an account."]},{"l":"Global","p":["These documents work differently than the other documents, they're used as a single document to store a lot of data.","Meanining; they're great for tracking very specific things. Such as global player deaths, global money spent, etc."]},{"l":"Vehicle","p":["Vehicle data usually includes model, paint, mods, ownership, etc.","Only owned vehicles should be given a document."]},{"l":"Virtual","p":["Virtual documents allow you to interface with any document type and use with a similar interface to useAccount, useCharacter, useVehicle, etc."]}],[{"l":"Account Document","p":["See Documents Section for further information on documents."]},{"l":"Extending Account","p":["Extending the default Account Interface is super simple. Just add a declare module to any plugin."]},{"l":"useAccountBinder","p":["Always bind a player to account data when they authenticate to your server."]},{"l":"bind"},{"l":"useAccount","p":["Data can be retrieved for the bound account like this."]},{"l":"checkPassword","p":["When you setup an account you often want to also setup a password, or check a password.","We've made it pretty easy in Rebar to simply check a password to login."]},{"l":"get","p":["Get the entire document bound to the player."]},{"l":"getField","p":["Get a specific field for the given document."]},{"l":"isValid","p":["If you need to check if a player has an account document bound to them, you can use the following method."]},{"l":"getCharacters","p":["When you need to obtain a character file for an account, you can use this function to get all existing characters.","This will return all character documents that belong to the account."]},{"l":"setBanned","p":["Banning an account is pretty straight forward but it does not prevent new accounts with new ips.","It's simply an account level ban that happens during server runtime."]},{"l":"set","p":["Set a single field to be stored in the database."]},{"l":"setBulk"},{"l":"permissions","p":["Click on the link above to see how to use account permissions."]},{"l":"groups","p":["Click on the link above to see how to use account groups."]},{"l":"useAccountEvents","p":["Listen for individual key changes for a given document.","Any field from the account document is valid."]},{"l":"on"}],[{"l":"Character Document","p":["See Documents Section for further information on documents."]},{"l":"Extending Character","p":["Extending the default Character Interface is super simple. Just add a declare module to any plugin."]},{"l":"useCharacterBinder"},{"l":"bind"},{"l":"useCharacter"},{"l":"isValid","p":["If you need to check if a player has a document bound to them, you can use the following method."]},{"l":"get","p":["Get the entire document bound to the player."]},{"l":"getField","p":["Get a specific field for the given document."]},{"l":"getVehicles","p":["Get all vehicle documents that are owned by this character."]},{"l":"set","p":["Set a single field to be stored in the database."]},{"l":"setBulk"},{"l":"permissions","p":["Click on the link above to see how to use character permissions."]},{"l":"groups","p":["Click on the link above to see how to use character groups."]},{"l":"useCharacterEvents","p":["Listen for individual key changes for a given document.","Any field from the character document is valid."]},{"l":"on"}],[{"l":"Global Document","p":["See Documents Section for further information on documents."]},{"l":"useGlobal","p":["When creating a global document, it will always come with an identifier.","You should also specify a data type for your global document."]},{"l":"get","p":["Get the entire document of data."]},{"l":"getField","p":["Get a specific field from the document. These may return undefined."]},{"l":"set","p":["Set a specific field for the document."]},{"l":"setBulk","p":["Set multiple fields for the document."]}],[{"l":"Vehicle Document","p":["See Documents Section for further information on documents."]},{"l":"Extending Vehicle","p":["Extending the default Vehicle Interface is super simple. Just add a declare module to any plugin."]},{"l":"useVehicleBinder"},{"l":"bind"},{"l":"useVehicle"},{"l":"get","p":["Data can be retrieved for the bound character like this."]},{"l":"getField","p":["Data can be retrieved for the bound character like this."]},{"l":"isValid","p":["If you need to check if a vehicle has a document bound to them, you can use the following method."]},{"l":"set","p":["Set a single field for the given document"]},{"l":"setBulk","p":["Set multiple fields for the given document"]}],[{"l":"Virtual Document","p":["See Documents Section for further information on documents."]},{"l":"useVirtual","p":["If document is not found in the database, it will return undefined."]},{"l":"get","p":["Get all data for a document"]},{"l":"getField","p":["Get a specific field from a document"]},{"l":"set","p":["Set a specific field for the document, and save to the database"]},{"l":"setBulk","p":["Set multiple fields for the document, and save to the database"]},{"l":"refresh","p":["Refresh the document from the database"]},{"l":"permissions","p":["If you want to modify permissions for a document, you can use the permissions property.","It is available only for Accounts and Characters collections.","Click the link above(heading) to see more details on how to use this property."]},{"l":"groups","p":["If you want to modify groups for a document, you can use the groups property.","It is available only for Accounts and Characters collections.","Click the link above(heading) to see more details on how to use this property."]}],[{"l":"events","p":["These events are unique to the Rebar framework, and help provide information about when something happens.","A lot of these events can only be invoked by using the Services functionality."]},{"l":"Event Formatting","p":["The syntax for any custom events should be as follows:"]},{"l":"Usage"},{"l":"Custom Events","p":["You can declare custom alt.on events in your plugin like this.","You can invoke them with alt.emit."]}],[{"l":"get","p":["Get means that it's going to get some information about a player, players, a vehicle, vehicles, or the world","They're general purpose utility functions for getting information."]},{"l":"usePlayerGetter","p":["The player getter gets information about a single player."]},{"l":"Usage"},{"l":"Examples"},{"l":"usePlayersGetter","p":["The players getter gets information about all players."]},{"i":"usage-1","l":"Usage"},{"i":"examples-1","l":"Examples"},{"l":"useVehicleGetter","p":["The vehicle getter gets information about a single vehicle."]},{"i":"usage-2","l":"Usage"},{"i":"examples-2","l":"Examples"},{"l":"useVehiclesGetter","p":["The vehicles getter gives information about all vehicles."]},{"i":"usage-3","l":"Usage"},{"i":"examples-3","l":"Examples"},{"l":"useWorldGetter","p":["A world getter gives information about the in-game world."]},{"i":"usage-4","l":"Usage"},{"i":"examples-4","l":"Examples"}],[{"l":"usePlayer","p":["While there is access to individual waypoints.","It is recommended that if you're accessing many waypoints to use the usePlayer function to get direct access to all functions without having to pass the player each time."]},{"l":"Animation","p":["Play an animation on a player in various ways.","Animation List"]},{"l":"Appearance","p":["Used to set various freeroam character appearance data and store in the database.","All functions will automatically save to the database, except for update"]},{"l":"Attachment","p":["Used to attach an object to a player. Rotation is always set to fixed for attachments."]},{"l":"Audio","p":["Play audio from frontend or using custom .ogg sound files.","If you want to use custom sound files, put them in the webview/public/sounds folder.","Frontend Sound List"]},{"l":"Clothing","p":["All of these functions can be used to adjust character clothing, skins, and uniforms.","Keep in mind that the render order is as follows.","If a skin is present we set the skin, and do nothing else.","If a skin is not present, we apply the clothes to the freeroam model","If a uniform is present, we apply the uniform to the freeroam model","Uniform will always be rendered last and will override clothing pieces.","All functions will automatically save to the database, except for update"]},{"l":"Native","p":["Invoke client natives from server side.","Rebar is adding this because sometimes you don't want to create a whole file to invoke one native on client-side."]},{"l":"Notify","p":["Notify allows you to send different text and messages to the player screen."]},{"l":"Screenshot","p":["Used to get a screenshot of a player's screen.","Mostly used for utility such as getting vehicle screenshots, and such."]},{"l":"Raycast","p":["Used to get what the player is looking at, or find out other information"]},{"l":"Player State","p":["Used to synchronize or apply weapons to a player."]},{"l":"Status","p":["Check if a player has an account bound, or character bound."]},{"l":"Waypoint","p":["Get a waypoint a player may or may not have currently marked on their map.","It can sometimes return undefined."]},{"l":"Weapon","p":["Used to synchronize or apply weapons to a player."]},{"l":"Webview","p":["This specific controller allows controlling the client-side webview instance for a given player.","You can focus the webview, hide pages, or show pages with ease."]},{"l":"World","p":["These functions change what the player will see, or doesn't see.","Often used for drunk effects, changing weather, changing time, or fading a screen to black."]}],[{"l":"About Player Permissions","p":["There is a documentation for permission system that allows you to control what players can and cannot do.","Rebar exposes the same interface for both account and character permissions. This means that you can use almost the same code to check permissions regardless of the source.","Also, Rebar allows you to modify permissions when player is offline, with use of useVirtualDocument."]},{"l":"Permission resolution order","p":["When checking permissions, Rebar will check permissions in the following order:","Account","Account's groups","Character","Character's groups","This means that if you want to grant a permission to all player's characters, you should set it on the account level."]},{"l":"Useful links"},{"l":"Player permissions","p":["Account permissions Character permissions Virtual document permissions"]},{"l":"Player groups","p":["Account groups Character groups Virtual document groups"]},{"l":"Using groups","p":["usePermissionGroup"]},{"l":"Checking permissions","p":["usePermissions useEntityPermissions"]}],[{"l":"Managing player permissions","p":["To manage player permissions, Rebar exposes the same interface for both account and character permissions."]},{"l":"Grant permission Async","p":["To grant a permission to a player, you can use one of the grant methods.","This will trigger a rebar:permissions:grant event with following arguments:","player: alt.Player— player that permissions was granted to.","permission: string— permission that was granted.","target: 'character' | 'account'— target of the operation.","This method is intended to be used for offline players only. If you want to grant a permission to a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"Revoke permission Async","p":["To revoke a permission from a player, you can use one of the revoke methods.","This will trigger a rebar:permissions:revoke event with following arguments:","player: alt.Player— player that permissions was revoked from.","permission: string— permission that was revoked.","target: 'character' | 'account'— target of the operation.","This method is intended to be used for offline players only. If you want to revoke a permission from a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"Clear permissions Async","p":["To clear all permissions from a player, you can use one of the clear methods.","This will trigger a rebar:permissions:clear event with following arguments:","player: alt.Player— player that permissions were cleared from.","permissions: string[]— permissions that were cleared.","target: 'character' | 'account'— target of the operation.","This method is intended to be used for offline players only. If you want to clear permissions from a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"List permissions","p":["To list all permissions granted to a player, you can use one of the list methods."]},{"l":"Check specific permission","p":["To check if a player has a specific permission, you can use one of the has methods."]},{"l":"Check all permissions","p":["To check if player has all of the specified permissions, you can use one of the hasAll methods."]},{"l":"Check any permission","p":["To check if player has at least one of the specified permissions, you can use one of the hasAny methods."]}],[{"l":"Managing player groups","p":["Player groups are a way to organize players into groups, and then assign permissions to those groups. This way, you can easily manage permissions for multiple players at once."]},{"l":"Attaching player to a group Async","p":["To attach a player to a group, you can use the useAccount, useCharacter and useVirtual functions. All of them have a groups property that you can use to attach a player to a group.","This will trigger a rebar:permissions:groups:add event with following arguments:","player: alt.Player— player that group was added to.","group: string— group that was added to character.","target: 'character' | 'account'— target of the operation.","group: string— group that was added to account.","This method is intended to be used for offline players only. If you want to grant a permission to a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"Removing player from a group Async","p":["To remove a player from a group, you can use the useAccount, useCharacter and useVirtual functions. All of them have a groups property that you can use to remove a player from a group.","This will trigger a rebar:permissions:groups:remove event with following arguments:","player: alt.Player— player that group was removed from.","group: string— group that was removed from character.","target: 'character' | 'account'— target of the operation.","group: string— group that was removed from account.","This method is intended to be used for offline players only. If you want to grant a permission to a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"Clearing all groups Async","p":["To clear all groups from a player, you can use the useAccount, useCharacter and useVirtual functions. All of them have a groups property that you can use to clear all groups from a player.","This will trigger a rebar:permissions:groups:clear event with following arguments:","player: alt.Player— player that groups were cleared from.","groups: string[]— groups that were cleared from character.","target: 'character' | 'account'— target of the operation.","groups: string[]— groups that were cleared from account.","This method is intended to be used for offline players only. If you want to grant a permission to a player that is currently online, use useCharacter or useAccount permissions proxies.","Unlike the useCharacter and useAccount permissions proxies, the useVirtual permissions proxy won't trigger any events."]},{"l":"Getting a list of groups","p":["To get a list of groups that a player is in, you can use the useAccount, useCharacter and useVirtual functions. All of them have a groups property that you can use to get a list of groups."]},{"l":"Check group membership","p":["To check if a player is a member of a group, you can use the useAccount, useCharacter and useVirtual functions. All of them have a groups property that you can use to check if a player is a member of a group."]}],[{"l":"usePermissions","p":["This function allows you to easily check if a player has a permission. It is a wrapper around the useAccount and useCharacter functions, and it will automatically check the permissions for the player's character or account."]},{"l":"Checking permissions","p":["This will start from account permissions, then will check account groups' permissions, then character permissions, and finally character groups' permissions. If the permission is found at any level, it will return true immediately. If the permission is not found at any level, it will return false."]},{"l":"Getting a flat permission list","p":["This will return a flat list of all permissions that the player has. Includes:","Account permissions","Account group permissions, including inherited groups","Character permissions","Character group permissions, including inherited groups"]},{"l":"Proxy functions","p":["The usePermissions function also has proxy functions for useAccount and useCharacter permissions/groups functions. This allows you to easily modify permissions and groups for the player's account or character.","Follow these links to see more details on how to use these functions for groups and permissions:","permissions","groups"]}],[{"l":"usePermissionGroup","p":["Permission groups are a way to organize permissions into groups, and then assign those groups to players. This way, you can easily manage permissions for multiple players at once."]},{"l":"Creating a permission group","p":["You can create a permission group with these properties:","permissions: string[]- an array of permission names that this group should have.","inherits?: string- a name of a group that this group should inherit permissions from. This way, you can create a hierarchy of groups.","version?: number- a version of the group.","inherits is a way to create a hierarchy of groups. If a group inherits from another group, it will have all the permissions from the inherited group.","Version is used to track changes in the group. On server start, the server is loading all groups from the database and comparing them with the groups in the code.","Conditions when the group will be updated in the database:","The same group in the code and group in the database have no version property.","Group in the code has version that is greater than the group in the database.","In this example, we created three groups: support, admin, and chief.","The support group has three permissions: kick, adminChat, and mute.","The admin group has two permissions: ban and unban, and inherits all permissions from the support group.","The chief group has two permissions: grant and revoke, and inherits all permissions from the admin group, which in turn inherits all permissions from the support group."]},{"l":"Removing a permission group","p":["You can remove a permission group by calling the remove method with the name of the group you want to remove.","If groups exists, it will remove the support group from the database.","On success, this will remove this group from all players(online/offline) that have this group attached."]},{"l":"Add permissions to a group","p":["You can add permissions to a group by calling the addPermission method with the name of the group and the permission you want to add.","This will add the teleport permission to the support group.","On success, this will increment the version of the group and update this group in the database. So, on next server start, if you want to make changes to the group, you need to increment the version of the group in the code."]},{"l":"Remove permissions from a group","p":["You can remove permissions from a group by calling the removePermission method with the name of the group and the permission you want to remove.","This will remove the teleport permission from the support group.","On success, this will increment the version of the group and update this group in the database. So, on next server start, if you want to make changes to the group, you need to increment the version of the group in the code."]},{"l":"Check permission","p":["You can check if group has a permission by calling the groupHasPermission method with the name of the group and the permission you want to check.","This will return true if the support group has the teleport permission, otherwise false."]},{"l":"List Permissions","p":["You can list all permissions recursively for a group by calling the groupsToPlainPermissions method with the name of the group.","This will return an array of all permissions for the chief group, including all inherited permissions. So, according to the add example, this will return ['kick', 'adminChat', 'mute', 'ban', 'unban', 'grant', 'revoke']."]}],[{"l":"useEntityPermissions","p":["This function allows you to easily integrate permission system into your feature.","It checks if player has a permission to perform an action on an entity, which type was extended from PermissionOptions.","This extends the entity with permissions property, this allows you to define complex permission structures, like:","permissions property accepts a string, an array of strings, or an object with and and or properties."]},{"l":"Checking permissions","p":["This function allows you to check if player has a permission to perform an action on an entity.","It will search for a permission for both player's account and character."]}],[{"l":"useKeybinder","p":["A simple way to bind keybinds to server-side functionality.","You can determine what key is pressed by using keycode.info.","All client-to-server keybinds are rate limited at 500ms."]},{"l":"Protecting Keybinds","p":["If you want your keybinds to be further protected from spam.","Consider using the various callback utilities for callback protection.","Callback Rate Limiter","Callback Permissions"]}],[{"l":"useKeypress","p":["Keypress lets you handle key up and key down from server-side. It completely ignores if a page is open."]},{"l":"on","p":["Each callback is called when the key is pressed down, and when the key is let go after being held down."]},{"l":"onHold","p":["The onHold callback is invoked after 2s on client-side.","Additionally, the callback time is verified server-side as well to ensure callback times are accurate and can't be invoked manually."]},{"l":"Simple Usage","p":["If you only want it to be invoked if the player holds a key long enough, then here's the short form."]},{"l":"Advanced Usage"}],[{"l":"useMessenger","p":["The messenger system allows for developers to easily send up messages from players and process them as commands or messages for other players to read.","However, the messages are not automatically sent to other players. You as a developer get to decide who sees what messages or if they see text messages at all.","Commands have permission system built-in, so you can easily allow players to use certain commands based on their permissions. For more details on how to use permissions, check useEntityPermissions."]},{"l":"Usage"}],[{"l":"useProxyFetch","p":["Allows for you to register safe endpoints on server-side which can be called client-side, or server-side.","Effectively calls an API from the server address, rather than the player address."]}],[{"l":"useServerConfig","p":["The server config controls player-wide aspects such as radar display, vehicle class display, etc."]}],[{"l":"useStreamSyncedBinder","p":["What this allows you to do is target a specific document field from a Character or Vehicle document and automatically synchronize the document data to client-side through streamSyncedMeta.","Whenever the value changes, it automatically updates for a player or vehicle.","For instance, if specify the propery money and money is updated for the player, it will be available on client-side, and in the webview."]}],[{"l":"useServices","p":["Services provide a way for plugin developers to call a shared interface handled by Rebar to handle common place functionality.","Examples being...","Adding Currency","Subtracting Currency","Adding an Item","Removing an Item","Checking if an Item Exists","Changing Weather","Getting Weather","Changing Time","Getting Time","etc."]},{"l":"Example"},{"l":"Service Register Example"},{"l":"Service Invoke Example"},{"l":"useCurrencyService"},{"l":"Register"},{"l":"add","p":["Adds a specified currency type to a given player with a specific quantity."]},{"l":"sub","p":["Subtracts a specified currency type to a given player with a specific quantity."]},{"l":"has","p":["Checks if the player has enough of a specified currency type."]},{"l":"useDeathService"},{"i":"register-1","l":"Register"},{"l":"respawn","p":["Respawn is meant to be used as a way to respawn the player through some other means in your game mode."]},{"l":"revive","p":["Revive is meant to be used to respawn the player in their same position"]},{"l":"useItemService"},{"i":"register-2","l":"Register"},{"i":"add-1","l":"add","p":["This should try and add an item quantity to the given player.","This will return false if the item cannot be added."]},{"i":"sub-1","l":"sub","p":["This should try and subtract an item quantity from the given player.","This will return false if the item quantity cannot be subtracted."]},{"i":"has-1","l":"has","p":["This should try and return true/false if the player has a specific item and a given quantity."]},{"l":"remove","p":["This should try and remove any item with a given uid and remove it entirely from the inventory.","UID stands for unique identifier."]},{"l":"useNotificationService"},{"i":"register-3","l":"Register"},{"l":"broadcast"},{"l":"emit"},{"l":"useTimeService"},{"i":"register-4","l":"Register"},{"l":"setTime","p":["Sets the in-game time for the whole server.","hour, minute, second"]},{"l":"getTime","p":["Returns the current server time."]},{"l":"useWeatherService"},{"i":"register-5","l":"Register"},{"l":"setWeather"},{"l":"setWeatherForecast"},{"l":"getWeather"},{"l":"getWeatherForecast"}],[{"l":"utility","p":["These are a collection of utility functions, some also exist client-side but most are server-side only."]},{"i":"clonearraydata","l":"clone.arrayData","p":["Cloning an array and ensuring it is not bound to anything"]},{"i":"cloneobjectdata","l":"clone.objectData","p":["Cloning object data will remove any functions"]},{"i":"clothingaddcategory","l":"clothing.addCategory","p":["Add a new category with dlc information, for custom dlcs These are the maximum ids available for each given set of clothes in the dlc based on component index."]},{"i":"clothinggetcategories","l":"clothing.getCategories","p":["Returns all available DLC names for female or male characters"]},{"i":"clothinggetcategory","l":"clothing.getCategory","p":["Return all data about a given dlc's clothes"]},{"i":"clothinggetdefaultcategory","l":"clothing.getDefaultCategory","p":["Get the default game baked clothes"]},{"i":"clothinggettops","l":"clothing.getTops","p":["Get all available top data for a model, including torso category"]},{"i":"clothinggettorsos","l":"clothing.getTorsos","p":["Get all torsos available for a given clothing top"]},{"i":"clothinggetundershirts","l":"clothing.getUndershirts","p":["Get all available undershirts for a given clothing top"]},{"i":"colorrgbatohextalpha","l":"color.rgbaToHextAlpha","p":["Converts an RGBA color to a hex color. This one returns #FF0000 Results always includes #"]},{"i":"flagisenabled","l":"flag.isEnabled","p":["Bitwise flags are useful when you want to store a lot of options under a single variable"]},{"i":"mathgetmissingnumber","l":"math.getMissingNumber","p":["Returns the missing number given an array of numbers"]},{"i":"passwordcheck","l":"password.check","p":["Checks a given password against a password hash Uses pbkdf2"]},{"i":"passwordhash","l":"password.hash","p":["Hashes a password for safe database storage"]},{"i":"randomelement","l":"random.element","p":["Will pull a random result from the array"]},{"i":"randomnumberbetween","l":"random.numberBetween","p":["Will pull a random number between two numbers"]},{"i":"randomrgb","l":"random.rgb","p":["Will create a random color"]},{"i":"randomshuffle","l":"random.shuffle","p":["Will shuffle the numbers into a random order, and return the shuffled array//"]},{"i":"timeformattimestamp","l":"time.formatTimestamp","p":["Generates a useable timestamp with hour, minute, and second"]},{"i":"uidgenerate","l":"uid.generate","p":["Generates a random short string as an identifier"]},{"l":"useProtectCallback","p":["When you're using events, or you need callbacks to be fully protected and permissioned this utility functions provides a simple wrapper to check for permissions before the callback is executed.","This prevents unauthorized users from executing callbacks at the event level.","A simple, but easy way to add permissions when recieving client-side events, or other callbacks."]},{"l":"useRateLimitCallback","p":["When you're using events, or you need callbacks to be protected by a rate limiter, this is a wrapper you can use.","This prevents player invoked functions from being called too frequently.","In fact, if a player calls them too much, they will be kicked."]}],[{"l":"useVehicle","p":["Used to create a new vehicle document, repair vehicles, apply vehicle documents, etc."]},{"i":"usevehicle-1","l":"useVehicle"},{"l":"apply","p":["Use a vehicle document, and apply it to the given vehicle.","This does not save the document, but only applies what is in the document."]},{"l":"create","p":["Creates a vehicle document and assigns the owner as the given identifier.","Usually you want to pass the character _id for this."]},{"i":"handlingset","l":"handling.set","p":["A way to modify client-side vehicle handling for individual vehicles from server-side.","Any player that enters a vehicle will always get the correct handling data for the individual vehicle."]},{"l":"Valid Handlers","p":["Check out [https://gtacars.net/gta5/glossary](for more information) on these properties."]},{"l":"isBound","p":["Check if a vehicle has a document bound to it"]},{"i":"keysadd","l":"keys.add","p":["Add keys to the vehicle for a given user."]},{"i":"keysclear","l":"keys.clear","p":["Remove all keys from the vehicle."]},{"i":"keysremove","l":"keys.remove","p":["Remove a specific key from the vehicle"]},{"l":"repair","p":["Correctly repairs the vehicle and returns the new vehicle instance","Players will be removed from the vehicle on repair"]},{"l":"save","p":["Save all current damage, position, rotation etc.","This does not create a new document for the given vehicle"]},{"l":"setRpm","p":["Set the RPM for the vehicle driver to 0"]},{"l":"sync","p":["Used to apply mods, health, etc. to a vehicle if it has a document bound"]},{"l":"toggleDoor","p":["Toggle a door without permission checking."]},{"l":"toggleDoorAsPlayer","p":["Toggle a door as a player and check permission for vehicle."]},{"l":"toggleEngine","p":["Toggle the engine without permission checking."]},{"l":"toggleEngineAsPlayer","p":["Toggle the engine as a player and check permission for vehicle."]},{"l":"toggleLock","p":["Toggle the lock without permission checking."]},{"l":"toggleLockAsPlayer","p":["Toggle the lock as a player and check permission for vehicle."]}],[{"l":"useHono","p":["The useHono function is designed to extend the game-server web API server by utilizing the Hono framework. It provides mechanisms to register new routes and use middlewares for handling incoming requests."]},{"l":"addRouter","p":["Registers a new router with the main Hono application."]},{"l":"midlewares","p":["A collection of middleware functions for request handling."]},{"l":"localOnly","p":["Middleware to restrict access to requests coming from the local machine (IP address 127.0.0.1).","You can also build your own middlewares, such as check auth token or whatever else."]},{"l":"Example usage","p":["Here is an example of creating a /ban endpoint, that will allow you to ban an account via api."]}],[{"l":"Client API Usage","p":["The client API can be accessed through a single import.","If you want more direct imports, those are also available through your intellisense."]},{"l":"Direct Import"}],[{"l":"Interaction","p":["Listen on client-side for when a player enters an interaction or leaves an interaction."]}],[{"l":"Native Menu","p":["This is a faux version of the native menu. It's a custom implementation that has a much simpler API."]},{"l":"Create"},{"l":"Destroy"},{"l":"Nested Menus Example","p":["This is a menu with two deeper level menus inside of it."]}],[{"l":"Instructional Menu","p":["Instructional menus are the keys that show up in the bottom right of the screen.","They usually use Controls"]}],[{"l":"Notification","p":["If you wish to override the default GTA:V notification system, you can use the built in notification system.","When you register an on event with useNotification it will stop default notifications from displaying.","You can now use the messages in your own notification system."]}],[{"l":"useProxyFetch","p":["This is the client version of the proxy fetch.","Server requires APIs to be registered before they can be called."]}],[{"l":"useStreamSyncedGetter","p":["When using the Stream Synced Binder, this allows you to get type safe responses on client-side."]}],[{"l":"API","p":["API allows for plugins to register their own APIs and make them available globally.","However, they are limited to either server-side or client-side.","This reduces the complexity to import functions from other plugins, or export functions for other plugins."]},{"l":"How to Declare an API","p":["Ensure you have an API setup in your plugin.","Create a global declaration for your API.","Done"]},{"l":"How to Get an API","p":["This is all that's necessary to start working with other plugin APIs","Below is dependent on load order, so your mileage may vary.","If you do not want to worry about load order. Consider the following pattern:"]}],[{"l":"Webview","p":["When using the webview on client-side, you have a lot of options."]}],[{"l":"Utility","p":["Utility provides a lot of shared functionality between client, server, and webview.","Your import path may vary depending on where you're importing from."]},{"l":"Import"},{"l":"Usage"},{"l":"Clone Data","p":["When you need to break function bindings for objects, or clone an array. This is a way to do it.","This works exactly the same as a deep clone."]},{"l":"RGBA to Hex","p":["Some values from the natives return as rgba, this converts them to hex."]},{"l":"Missing Number","p":["Return a missing number given a group of numbers."]},{"l":"Randomization","p":["Various randomization functions for creating data."]},{"l":"UID","p":["Randomly generates a short string. Collision can happen."]},{"l":"Vector","p":["Vectors are used to perform various distance checks."]},{"l":"Vehicle Hash Map","p":["When you need vehicle names from hash values or need a large list of vehicles. This is it."]}],[{"l":"Doors","p":["-1033001619","-1116041313","-1148826190","-1212951353","-1215222675","-131296141","-1320876379","-1603817716","-1663512092","-1844444717","-1881825907","-1922281023","-2023754432","-2051651622","-340230128","-495720969","-550347177","-626684119","-822900180","-8873588","110411286","1173348778","1335311341","1417577297","145369505","1544229216","1557126584","1780022985","185711165","1956494919","2059227086","270330101","320433149","452874391","520341586","631614199","668467214","703855057","741314661","749848321","868499217","964838196","97297972","Ammu Nation Adam's Apple Boulevard Left Door","Ammu Nation Adam's Apple Boulevard Right Door","Ammu Nation Adam's Apple Boulevard Shooting Range Door","Ammu Nation Lindsay Circus Left Door","Ammu Nation Lindsay Circus Right Door","Ammu Nation Popular Street Left Door","Ammu Nation Popular Street Right Door","Ammu Nation Popular Street Shooting Range Door","Ammu Nation Vespucci Boulevard Left Door","Ammu Nation Vespucci Boulevard Right Door","Ammu Nation Vinewood Plaza Left Door","Ammu Nation Vinewood Plaza Right Door","Beeker's Garage Paleto Bay Interior Door","Beeker's Garage Paleto Bay Left Garage Door","Beeker's Garage Paleto Bay Office Door","Beeker's Garage Paleto Bay Right Garage Door","Bob Mulét Barber Shop Left Door","Bob Mulét Barber Shop Right Door","Bolingbroke Penitentiary Main Enter First Door","Bolingbroke Penitentiary Main Enter Second Door","Bolingbroke Penitentiary Main Enter Third Door","Description","Discount Store South Enter Left Door","Discount Store South Enter Right Door","Franklin House Enter Door","Franklin House Garage Door","Hair on Hawick Barber Shop Door","List of doors that could be used with useDoor controller.","Los Santos Customs Carcer Way Door","Los Santos Customs Greenwich Parkway Door","Los Santos Customs Popular Street Door","Los Santos Customs Route 68 Interior Door","Los Santos Customs Route 68 Left Garage Door","Los Santos Customs Route 68 Office Door","Los Santos Customs Route 68 Right Garage Door","Mission Row Police Station Armory Double Door Left","Mission Row Police Station Armory Double Door Right","Mission Row Police Station Armory Secure Door","Mission Row Police Station Back Enter Left Door","Mission Row Police Station Back Enter Right Door","Mission Row Police Station Back Gate Door","Mission Row Police Station Back To Cells Door","Mission Row Police Station Briefing Left Door","Mission Row Police Station Briefing Right Door","Mission Row Police Station Captan's Office Door","Mission Row Police Station Cell And Briefing Left Door","Mission Row Police Station Cell And Briefing Right Door","Mission Row Police Station Cell Door 1","Mission Row Police Station Cell Door 2","Mission Row Police Station Cell Door 3","Mission Row Police Station Door To Cells Door","Mission Row Police Station Locker Room 1 Door","Mission Row Police Station Locker Rooms Door","Mission Row Police Station Main Enter Left Door","Mission Row Police Station Main Enter Right Door","Mission Row Police Station Roof Access Door","Mission Row Police Station Roof Door","Model","new alt.Vector3(-1145.898, -1991.144, 14.18357","new alt.Vector3(-1201.435, -776.8566, 17.99184","new alt.Vector3(-1219.633, -912.406, 12.47626","new alt.Vector3(-1224.755, -911.4182, 12.47039","new alt.Vector3(-1226.894, -903.1218, 12.47039","new alt.Vector3(-14.86892, -1441.182, 31.19323","new alt.Vector3(-1454.782, -231.7927, 50.05649","new alt.Vector3(-1456.201, -233.3682, 50.05648","new alt.Vector3(-1482.679, -380.153, 40.30745","new alt.Vector3(-1482.693, -374.9365, 40.31332","new alt.Vector3(-1490.411, -383.8453, 40.30745","new alt.Vector3(-156.439, -304.4294, 39.99308","new alt.Vector3(-157.1293, -306.4341, 39.99308","new alt.Vector3(-25.2784, -1431.061, 30.83955","new alt.Vector3(-29.86917, -148.1571, 57.22648","new alt.Vector3(-2961.749, 390.2573, 15.19322","new alt.Vector3(-2965.648, 386.7928, 15.18735","new alt.Vector3(-2973.535, 390.1414, 15.18735","new alt.Vector3(-31.72353, -1101.847, 26.57225","new alt.Vector3(-3167.75, 1055.536, 21.53288","new alt.Vector3(-33.80989, -1107.579, 26.57225","new alt.Vector3(-356.0905, -134.7714, 40.01295","new alt.Vector3(-37.33113, -1108.873, 26.7198","new alt.Vector3(-39.13366, -1108.218, 26.7198","new alt.Vector3(-59.89302, -1092.952, 26.88362","new alt.Vector3(-60.54582, -1094.749, 26.88872","new alt.Vector3(-662.6415, -944.3256, 21.97915","new alt.Vector3(-665.2424, -944.3256, 21.97915","new alt.Vector3(-715.6154, -157.2561, 37.67493","new alt.Vector3(-716.6755, -155.42, 37.67493","new alt.Vector3(-822.4442, -188.3924, 37.81895","new alt.Vector3(-823.2001, -187.0831, 37.81895","new alt.Vector3(105.1518, 6614.655, 32.58521","new alt.Vector3(105.7772, 6620.532, 33.34266","new alt.Vector3(108.8502, 6617.877, 32.67305","new alt.Vector3(1129.51, -982.7756, 46.56573","new alt.Vector3(113.9822, -1297.43, 29.41868","new alt.Vector3(1132.645, -978.6059, 46.55986","new alt.Vector3(114.3135, 6623.233, 32.67305","new alt.Vector3(1141.038, -980.3225, 46.55986","new alt.Vector3(116.0046, -1294.692, 29.41947","new alt.Vector3(1174.656, 2644.159, 40.50673","new alt.Vector3(1182.307, 2644.166, 40.50784","new alt.Vector3(1182.646, 2641.182, 39.31031","new alt.Vector3(1187.202, 2644.95, 38.55176","new alt.Vector3(127.8201, -211.8274, 55.22751","new alt.Vector3(127.9552, -1298.503, 29.41962","new alt.Vector3(16.12787, -1114.606, 29.94694","new alt.Vector3(18.572, -1115.495, 29.94694","new alt.Vector3(1806.939, 2616.975, 44.60093","new alt.Vector3(1818.543, 2597.482, 44.60749","new alt.Vector3(1844.998, 2597.482, 44.63626","new alt.Vector3(1932.952, 3725.154, 32.9944","new alt.Vector3(231.5123, 216.5177, 106.4049","new alt.Vector3(232.6054, 214.1584, 106.4049","new alt.Vector3(236.5488, 228.3147, 110.4328","new alt.Vector3(237.7704, 227.87, 106.426","new alt.Vector3(243.8379, -46.52324, 70.09098","new alt.Vector3(244.7275, -44.07911, 70.09098","new alt.Vector3(256.6172, 206.1522, 110.4328","new alt.Vector3(258.2022, 204.1005, 106.4049","new alt.Vector3(259.0879, 212.8062, 106.4049","new alt.Vector3(259.9831, 215.2468, 106.4049","new alt.Vector3(260.6432, 203.2052, 106.4049","new alt.Vector3(260.8579, 210.4453, 110.4328","new alt.Vector3(262.5366, 215.0576, 110.4328","new alt.Vector3(434.7479, -980.6184, 30.83926","new alt.Vector3(434.7479, -983.2151, 30.83926","new alt.Vector3(443.0298, -991.941, 30.8393","new alt.Vector3(443.0298, -994.5412, 30.8393","new alt.Vector3(443.4078, -989.4454, 30.8393","new alt.Vector3(446.0079, -989.4454, 30.8393","new alt.Vector3(446.5728, -980.0106, 30.8393","new alt.Vector3(450.1041, -981.4915, 30.8393","new alt.Vector3(450.1041, -984.0915, 30.8393","new alt.Vector3(450.1041, -985.7384, 30.8393","new alt.Vector3(452.6248, -987.3626, 30.8393","new alt.Vector3(453.0793, -983.1895, 30.83926","new alt.Vector3(461.2865, -985.3206, 30.83926","new alt.Vector3(461.8065, -1001.302, 25.06443","new alt.Vector3(461.8065, -994.4086, 25.06443","new alt.Vector3(461.8065, -997.6583, 25.06443","new alt.Vector3(463.4782, -1003.538, 25.00599","new alt.Vector3(464.3613, -984.678, 43.83443","new alt.Vector3(464.5701, -992.6641, 25.06443","new alt.Vector3(467.3716, -1014.452, 26.53623","new alt.Vector3(469.9679, -1014.452, 26.53623","new alt.Vector3(488.8923, -1011.67, 27.14583","new alt.Vector3(6.81789, -1098.209, 29.94685","new alt.Vector3(617.2458, 2751.022, 42.75777","new alt.Vector3(723.116, -1088.831, 23.23201","new alt.Vector3(810.5769, -2148.27, 29.76892","new alt.Vector3(813.1779, -2148.27, 29.76892","new alt.Vector3(82.38156, -1390.476, 29.52609","new alt.Vector3(82.38156, -1390.752, 29.52609","new alt.Vector3(827.5342, -2160.493, 29.76884","new alt.Vector3(842.7685, -1024.539, 28.34478","new alt.Vector3(845.3694, -1024.539, 28.34478","new alt.Vector3(96.09197, -1284.854, 29.43878","new alt.Vector3(99.08321, -1293.701, 29.41868","O'Sheas Barber Shop Door","Pacific Standard Bank Back Left Door","Pacific Standard Bank Back Right Door","Pacific Standard Bank Back To Hall Left Door","Pacific Standard Bank Back To Hall Right Door","Pacific Standard Bank Big Office Door","Pacific Standard Bank Door To Upstair","Pacific Standard Bank Main Left Door","Pacific Standard Bank Main Right Door","Pacific Standard Bank Small Office Door","Pacific Standard Bank Upstair Door","Pacific Standard Bank Upstair Door To Offices","Ponsonbys Cougar Avenue Left Door","Ponsonbys Cougar Avenue Right Door","Ponsonbys Portola Drive Left Door","Ponsonbys Portola Drive Right Door","Ponsonbys Rockford Plaza Left Door","Ponsonbys Rockford Plaza Right Door","Position","Premium Deluxe Motorsport Left Office Door","Premium Deluxe Motorsport Main Left Door","Premium Deluxe Motorsport Main Right Door","Premium Deluxe Motorsport Parking Left Door","Premium Deluxe Motorsport Parking Right Door","Premium Deluxe Motorsport Right Office Door","Rob's Liquor El Rancho Boulevard Back Door","Rob's Liquor El Rancho Boulevard Main Enter Door","Rob's Liquor El Rancho Boulevard Personnal Door","Rob's Liquor Prosperity Street Back Door","Rob's Liquor Prosperity Street Main Enter Door","Rob's Liquor Prosperity Street Personnal Door","Rob's Liquor Route 1 Back Door","Rob's Liquor Route 1 Main Enter Door","Rob's Liquor Route 1 Personnal Door","Rob's Liquor San Andreas Avenue Back Door","Rob's Liquor San Andreas Avenue Main Enter Door","Rob's Liquor San Andreas Avenue Personnal Door","Sub Urban Chumash Plaza Door","Sub Urban Hawick Avenue Door","Sub Urban Prosperity Street Promenade Door","Sub Urban Route 68 Door","Vanilla Unicorn Back Enter Door","Vanilla Unicorn Dress Door","Vanilla Unicorn Main Enter Door","Vanilla Unicorn Office Door","Vanilla Unicorn Private Rooms Door"]}],[{"l":"Explosion Types","p":["0","1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","35","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","53","54","55","56","57","58","59","6","60","61","62","63","64","65","66","67","68","69","7","70","71","72","8","9","AIR_DEFENSE","APCSHELL","BARREL","BIKE","BIRD_CRAP","BLIMP","BLIMP2","BOAT","BOMB_CLUSTER","BOMB_CLUSTER_SECONDARY","BOMB_GAS","BOMB_INCENDIARY","BOMB_STANDARD","BOMB_STANDARD_WIDE","BOMBUSHKA_CANNON","BULLET","BURIEDMINE","BZGAS","CAR","Explosion Type","EXPLOSIVEAMMO","EXPLOSIVEAMMO_SHOTGUN","EXTINGUISHER","FIREWORK","FLAME","FLAME_EXPLODE","FLARE","GAS_CANISTER","GAS_TANK","GRENADE","GRENADELAUNCHER","HI_OCTANE","HUNTER_BARRAGE","HUNTER_CANNON","ID","List of all explosion types.","MINE_UNDERWATER","MOLOTOV","MORTAR_KINETIC","OPPRESSOR2_CANNON","ORBITAL_CANNON","PETROL_PUMP","PIPEBOMB","PLANE","PLANE_ROCKET","PROGRAMMABLEAR","PROPANE","PROXMINE","RAILGUN","RAYGUN","ROCKET","ROGUE_CANNON","SCRIPT_DRONE","SCRIPT_MISSILE","SHIP_DESTROY","SMOKEGRENADE","SMOKEGRENADELAUNCHER","SNOWBALL","STEAM","STICKYBOMB","TANKER","TANKSHELL","TORPEDO","TORPEDO_UNDERWATER","TRAIN","TRUCK","VALKYRIE_CANNON","VEHICLE_BULLET","VEHICLEMINE","VEHICLEMINE_EMP","VEHICLEMINE_KINETIC","VEHICLEMINE_SLICK","VEHICLEMINE_SPIKE","VEHICLEMINE_TAR","WATER_HYDRANT"]}],[{"l":"Frontend Sounds","p":["-1","\"Knuckle_Crack_Hard_Cel","0","1","10_SEC_WARNING","10s","1st_Person_Transition","3_2_1","3_2_1_NON_RACE","5_SEC_WARNING","5_Second_Timer","5s","5s_To_Event_Start_Countdown","A list of common frontend sounds.","Airhorn","all","Altitude_Warning","APT_BvS_Soundset","Apt_Style_Purchase","Arming_Countdown","ASSASSINATION_MULTI","ASSASSINATIONS_HOTEL_TIMER_COUNTDOWN","ATM_SOUNDS","ATM_WINDOW","Audio Name","Audio Ref","BACK","Background","Background_Loop","Background_Sound","BARRY_02_SOUNDSET","BASE_JUMP_PASSED","BASEJUMPS_SOUNDS","Beast_Checkpoint","Beast_Checkpoint_NPC","Bed","Beep_Green","Beep_Red","BIG_SCORE_3A_SOUNDS","BIG_SCORE_SETUP_SOUNDS","Blade_Appear","Blip_Pickup","BOATS_PLANES_HELIS_BOOM","Bomb_Disarmed","Boss_Blipped","Boss_Message_Orange","Breaker_01","Breaker_02","BulldozerDefault","Bus_Schedule_Pickup","CABLE_SNAPS","CAM_PAN_DARTS","Camera_Hum","Camera_Move_Loop","Camera_Shoot","Camera_Zoom","CANCEL","CAR_BIKE_WHOOSH","CAR_STEAL_2_SOUNDSET","CB_RADIO_SFX","CELEBRATION_SOUNDSET","CHALLENGE_UNLOCKED","Change_Cam","Change_Station_Loud","CHARACTER_SELECT","CHECKPOINT_AHEAD","Checkpoint_Beast_Hit","CHECKPOINT_BEHIND","Checkpoint_Cash_Hit","Checkpoint_Hit","CHECKPOINT_MISSED","CHECKPOINT_NORMAL","CHECKPOINT_PERFECT","Checkpoint_Teammate","CHECKPOINT_UNDER_THE_BRIDGE","Cheers","Click","CLICK_BACK","Click_Fail","Click_Special","CLOSE_WINDOW","CLOSED","CLOSING","COLLECTED","CONFIRM_BEEP","CONSTRUCTION_ACCIDENT_1_SOUNDS","CONTINUE","Continue_Accepted","Continue_Appears","CONTINUOUS_SLIDER","Crash","Criminal_Damage_High_Value","Criminal_Damage_Kill_Player","Criminal_Damage_Low_Value","Cycle_Item","DELETE","Delete_Placed_Prop","Deliver_Pick_Up","DiggerRevOneShot","DISTANT_DOG_BARK","DLC_Apartments_Drop_Zone_Sounds","DLC_APT_Apartment_SoundSet","DLC_APT_YACHT_DOOR_SOUNDS","DLC_Dmod_Prop_Editor_Sounds","DLC_HALLOWEEN_FVJ_Sounds","DLC_HEIST_BIOLAB_PREP_HACKING_SOUNDS","DLC_HEIST_FLEECA_SOUNDSET","DLC_HEIST_HACKING_SNAKE_SOUNDS","DLC_HEIST_PLANNING_BOARD_SOUNDS","DLC_HEISTS_BIOLAB_FINALE_SOUNDS","DLC_HEISTS_FAILED_SCREEN_SOUNDS","DLC_HEISTS_FINALE_SCREEN_SOUNDS","DLC_HEISTS_GENERAL_FRONTEND_SOUNDS","DLC_HEISTS_GENERIC_SOUNDS","DLC_HEISTS_PREP_SCREEN_SOUNDS","DLC_Lowrider_Relay_Race_Sounds","DLC_Pilot_Chase_Parachute_Sounds","DLC_PILOT_MP_HUD_SOUNDS","DLC_PRISON_BREAK_HEIST_SOUNDS","DLC_TG_Dinner_Sounds","DLC_TG_Running_Back_Sounds","DOCKS_HEIST_FINALE_2B_SOUNDS","DOOR_BUZZ","DOOR_GARAGE","Door_Open","Drill_Pin_Break","Dropped","EDIT","Elevation_Loop","EMP","EMP_Blast","End_Squelch","Enemy_Capture_Start","Enemy_Deliver","Enemy_Pick_Up","Enter_1st","Enter_Area","Enter_Capture_Zone","ERROR","Event_Message_Purple","Event_Start_Text","EXILE_1","EXIT","Exit_Capture_Zone","Failure","Falling_Crates","FAMILY_1_CAR_BREAKDOWN","FAMILY_1_CAR_BREAKDOWN_ADDITIONAL","FAMILY_5_SOUNDS","FAMILY1_BOAT","Faster_Bar_Full","Faster_Click","FBI_HEIST_FINALE_CHOPPER","Feed_Message_Sounds","FestiveGift","FINDING_VIRUS","FIRST_PLACE","FLIGHT_SCHOOL_LESSON_PASSED","FLYING_STREAM_END_INSTANT","FM_Events_Sasquatch_Sounds","FocusIn","FocusOut","Found_Target","Friend_Deliver","Friend_Pick_Up","Frontend_Beast_Fade_Screen","Frontend_Beast_Freeze_Screen","Frontend_Beast_Text_Hit","Frontend_Beast_Transform_Back","GO","GO_NON_RACE","Goal","GOLF_BIRDIE","GOLF_EAGLE","GOLF_NEW_RECORD","Goon_Paid_Large","Goon_Paid_Small","Grab_Chute_Foley","Grab_Parachute","GTAO_APT_DOOR_DOWNSTAIRS_GLASS_SOUNDS","GTAO_APT_DOOR_DOWNSTAIRS_WOOD_SOUNDS","GTAO_Boss_Goons_FM_Shard_Sounds","GTAO_Boss_Goons_FM_Soundset","GTAO_FM_Cross_The_Line_Soundset","GTAO_FM_Events_Soundset","GTAO_Magnate_Boss_Modes_Soundset","GTAO_Magnate_Hunt_Boss_SoundSet","GTAO_Magnate_Yacht_Attack_Soundset","GTAO_MUGSHOT_ROOM_SOUNDS","GTAO_Shepherd_Sounds","GTAO_Speed_Convoy_Soundset","Hack_Failed","Hack_Success","Hang_Up","HEIST_BULLETIN_BOARD_SOUNDSET","Heli_Crash","HIGHLIGHT","Highlight_Accept","Highlight_Cancel","Highlight_Error","Highlight_Move","HIGHLIGHT_NAV_UP_DOWN","HintCamSounds","Hit","Hit_1","Hit_In","Hit_Out","HOORAY","HORDE_COOL_DOWN_TIMER","HUD_AMMO_SHOP_SOUNDSET","HUD_AWARDS","HUD_DEATHMATCH_SOUNDSET","HUD_FREEMODE_SOUNDSET","HUD_FRONTEND_CLOTHESSHOP_SOUNDSET","HUD_FRONTEND_CUSTOM_SOUNDSET","HUD_FRONTEND_DEFAULT_SOUNDSET","HUD_FRONTEND_MP_COLLECTABLE_SOUNDS","HUD_FRONTEND_MP_SOUNDSET","HUD_FRONTEND_TATTOO_SHOP_SOUNDSET","HUD_FRONTEND_WEAPONS_PICKUPS_SOUNDSET","HUD_LIQUOR_STORE_SOUNDSET","HUD_MINI_GAME_SOUNDSET","HUD_MINIGAME_SOUNDSET","HUD_PROPERTY_SOUNDSET","In","Kill_List_Counter","Knuckle_Crack_Slap_Cel","LEADER_BOARD","LEADERBOARD","Lester_Laugh_Phone","LESTER1A_SOUNDS","Lights_On","LIMIT","Load_Scene","LOCAL_PLYR_CASH_COUNTER_COMPLETE","LOCAL_PLYR_CASH_COUNTER_INCREASE","LONG_PLAYER_SWITCH_SOUNDS","LOOSE_MATCH","Lose_1st","LOSER","Lost_Target","Lowrider_Super_Mod_Garage_Sounds","Lowrider_Upgrade","Map_Roll_Down","Map_Roll_Up","MARKER_ERASE","MEDAL_BRONZE","MEDAL_GOLD","MEDAL_SILVER","MEDAL_UP","Menu_Accept","MICHAEL_LONG_SCREAM","Microphone","MINUTE_MAN_01_SOUNDSET","Mission_Pass_Notify","MissionFailedSounds","Move_Loop","MP_5_SECOND_TIMER","MP_AWARD","MP_CCTV_SOUNDSET","MP_Flash","MP_IDLE_KICK","MP_IDLE_TIMER","MP_Impact","MP_LOBBY_SOUNDS","MP_MISSION_COUNTDOWN_SOUNDSET","MP_PLAYER_APARTMENT","MP_PROPERTIES_ELEVATOR_DOORS","MP_RADIO_SFX","MP_RANK_UP","MP_SNACKS_SOUNDSET","MP_WAVE_COMPLETE","NAV","Nav_Arrow_Ahead","Nav_Arrow_Behind","Nav_Arrow_Left","Nav_Arrow_Right","NAV_LEFT_RIGHT","NAV_UP_DOWN","Near_Miss_Counter","Near_Miss_Counter_Reset","NO","NOIR_FILTER_SOUNDS","Object_Collect_Player","Object_Collect_Remote","Object_Dropped_Remote","OFF","Off_High","OK","ON","On_Call_Player_Join","Oneshot_Final","OOB_Cancel","OOB_Start","OOB_Timer_Dynamic","OPEN_WINDOW","OPENED","OPENING","OTHER_TEXT","out","Out_Of_Area","Out_of_Bounds","PALETO_SCORE_2A_BANK_SS","Pan","PAPARAZZO_02_SOUNDSETS","Paper_Shuffle","Parcel_Vehicle_Lost","Payment_Non_Player","Payment_Player","Pen_Tick","PERSON_SCROLL","PERSON_SELECT","PEYOTE_COMPLETED","Phone_Generic_Key_02","Phone_Generic_Key_03","Phone_SoundSet_Default","Phone_Soundset_Franklin","Phone_SoundSet_Glasses_Cam","Phone_SoundSet_Michael","PICK_UP","PICK_UP_WEAPON","Pickup_Briefcase","PICKUP_WEAPON_BALL","PICKUP_WEAPON_SMOKEGRENADE","Pin_Bad","PIN_BUTTON","Pin_Centred","Pin_Good","Pin_Movement","PIPES_LAND","Place_Prop_Fail","Place_Prop_Success","Player_Collect","Player_Enter_Line","Player_Exit_Line","PLAYER_SWITCH_CUSTOM_SOUNDSET","POLICE_CHOPPER_CAM_SOUNDS","Power_Down","Pre_Screen_Stinger","PROPERTY_PURCHASE","PROPERTY_PURCHASE_MEDIUM","PS2A_MONEY_LOST","Pull_Out","PURCHASE","PUSH","Put_Away","QUIT","QUIT_WHOOSH","RACE_PLACED","Radar_Beast_Blip","Radio_Soundset","RAMP_DOWN","RAMP_UP","RANK_UP","Remote_Enemy_Enter_Line","Remote_Friendly_Enter_Line","REMOTE_PLYR_CASH_COUNTER_COMPLETE","REMOTE_PLYR_CASH_COUNTER_INCREASE","Reset_Prop_Position","RESPAWN_ONLINE_SOUNDSET","RESPAWN_SOUNDSET","RESTART","RETRY","Retune_High","Return_To_Vehicle_Timer","ROBBERY_MONEY_TOTAL","ROPE_CUT","ROPE_CUT_SOUNDSET","Rotate_Loop","ROUND_ENDING_STINGER_CUSTOM","SAFE_CRACK_SOUNDSET","SAFE_DOOR_CLOSE","SAFE_DOOR_OPEN","Save_Scene","SCREEN_FLASH","ScreenFlash","SELECT","Select_Placed_Prop","Shard_Disappear","SHOOTING_RANGE_ROUND_OVER","SHORT_PLAYER_SWITCH_SOUND_SET","Short_Transition_In","Short_Transition_Out","SIGN_DESTROYED","SKIP","Slow_Clap_Cel","Sound ID","SPECIAL_ABILITY_SOUNDSET","Start","Start_Squelch","STUN_COLLECT","Success","Sult-16_Super_Mod_Garage_Sounds","Swap_Sides","SWING_SHUT","SwitchRedWarning","SwitchWhiteWarning","Tattooing_Oneshot","Tattooing_Oneshot_Remove","TATTOOIST_SOUNDS","Team_Capture_Start","TENNIS_MATCH_POINT","TENNIS_POINT_WON","TextHit","Thermal_Off","Thermal_On","Thernal_Vision_Loop","TIMER","Timer_10s","Timer_5s","TIMER_STOP","TIMER_STOP_MASTER","TOGGLE_ON","TRAFFIC_CONTROL_BG_NOISE","TRAFFIC_CONTROL_CHANGE_CAM","Traffic_Control_Fail","Traffic_Control_Fail_Blank","Traffic_Control_Light_Switch_Back","TRAFFIC_CONTROL_MOVE_CROSSHAIR","TRAFFIC_CONTROL_TOGGLE_LIGHT","Trail_Custom","TRUCK_RAMP_DOWN","TUMBLER_PIN_FALL","TUMBLER_PIN_FALL_FINAL","TUMBLER_RESET","TUMBLER_TURN","Turn","UNDER_THE_BRIDGE","UNDER_WATER_COME_UP","UNDO","v_4","WastedSounds","WAYPOINT_SET","WEAKEN","WEAPON_AMMO_PURCHASE","WEAPON_ATTACHMENT_EQUIP","WEAPON_ATTACHMENT_UNEQUIP","WEAPON_PURCHASE","WEAPON_SELECT_ARMOR","WEAPON_SELECT_BATON","WEAPON_SELECT_FUEL_CAN","WEAPON_SELECT_GRENADE_LAUNCHER","WEAPON_SELECT_HANDGUN","WEAPON_SELECT_KNIFE","WEAPON_SELECT_OTHER","WEAPON_SELECT_PARACHUTE","WEAPON_SELECT_RIFLE","WEAPON_SELECT_RPG_LAUNCHER","WEAPON_SELECT_SHOTGUN","WEB_NAVIGATION_SOUNDS_PHONE","Whistle","Whoosh_1s_L_to_R","Whoosh_1s_R_to_L","WIN","WIND","YES","Zone_Enemy_Capture","Zone_Neutral","Zone_Team_Capture","Zoom","Zoom_In","Zoom_Left","Zoom_Out","Zoom_Right"]}],[{"i":"gtav-controls","l":"GTA:V Controls","p":["These are all the control groups, and controls official names."]},{"l":"Input Groups","p":["0","1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","4","5","6","7","8","9","ID","INPUTGROUP_CELLPHONE_NAVIGATE","INPUTGROUP_CELLPHONE_NAVIGATE_LR","INPUTGROUP_CELLPHONE_NAVIGATE_UD","INPUTGROUP_CURSOR","INPUTGROUP_CURSOR_SCROLL","INPUTGROUP_FLY","INPUTGROUP_FRONTEND_BUMPERS","INPUTGROUP_FRONTEND_DPAD_ALL","INPUTGROUP_FRONTEND_DPAD_LR","INPUTGROUP_FRONTEND_DPAD_UD","INPUTGROUP_FRONTEND_GENERIC_ALL","INPUTGROUP_FRONTEND_GENERIC_LR","INPUTGROUP_FRONTEND_GENERIC_UD","INPUTGROUP_FRONTEND_LSTICK_ALL","INPUTGROUP_FRONTEND_RSTICK_ALL","INPUTGROUP_FRONTEND_STICKS","INPUTGROUP_FRONTEND_TRIGGERS","INPUTGROUP_LOOK","INPUTGROUP_MOVE","INPUTGROUP_SCRIPT_BUMPERS","INPUTGROUP_SCRIPT_DPAD_ALL","INPUTGROUP_SCRIPT_DPAD_LR","INPUTGROUP_SCRIPT_DPAD_UD","INPUTGROUP_SCRIPT_LSTICK_ALL","INPUTGROUP_SCRIPT_RSTICK_ALL","INPUTGROUP_SCRIPT_TRIGGERS","INPUTGROUP_SNIPER_ZOOM_SECONDARY","INPUTGROUP_SUB","INPUTGROUP_VEH_HYDRAULICS_CONTROL","INPUTGROUP_VEH_MOVE_ALL","INPUTGROUP_WEAPON_WHEEL_CYCLE","INPUTGROUP_WHEEL","Name"]},{"l":"Controls","p":["-",",",".","(NONE)","[","]","=","~ / `","0","1","10","100","101","102","103","104","105","106","107","108","109","11","110","111","112","113","114","115","116","117","118","119","12","120","121","122","123","124","125","126","127","128","129","13","130","131","132","133","134","135","136","137","138","139","14","140","141","142","143","144","145","146","147","148","149","15","150","151","152","153","154","155","156","157","158","159","16","160","161","162","163","164","165","166","167","168","169","17","170","171","172","173","174","175","176","177","178","179","18","180","181","182","183","184","185","186","187","188","189","19","190","191","192","193","194","195","196","197","198","199","2","20","200","201","202","203","204","205","206","207","208","209","21","210","211","212","213","214","215","216","217","218","219","22","220","221","222","223","224","225","226","227","228","229","23","230","231","232","233","234","235","236","237","238","239","24","240","241","242","243","244","245","246","247","248","249","25","250","251","252","253","254","255","256","257","258","259","26","260","261","262","263","264","265","266","267","268","269","27","270","271","272","273","274","275","276","277","278","279","28","280","281","282","283","284","285","286","287","288","289","29","290","291","292","293","294","295","296","297","298","299","3","30","300","301","302","303","304","305","306","307","308","309","31","310","311","312","313","314","315","316","317","318","319","32","320","321","322","323","324","325","326","327","328","329","33","330","331","332","333","334","335","336","337","338","339","34","340","341","342","343","344","345","346","347","348","349","35","350","351","352","353","354","355","356","357","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","53","54","55","56","57","58","59","6","60","61","62","63","64","65","66","67","68","69","7","70","71","72","73","74","75","76","77","78","79","8","80","81","82","83","84","85","86","87","88","89","9","90","91","92","93","94","95","96","97","98","99","A","ARROW DOWN","ARROW LEFT","ARROW RIGHT","ARROW UP","ARROW UP / SCROLLWHEEL BUTTON (PRESS)","B","BACK","BACKSPACE","BACKSPACE / ESC","BACKSPACE / ESC / RIGHT MOUSE BUTTON","C","CAPSLOCK","D","Default QWERTY","DELETE","DPAD DOWN","DPAD LEFT","DPAD RIGHT","DPAD UP","E","ENTER","ENTER / LEFT MOUSE BUTTON","ENTER / LEFT MOUSE BUTTON / SPACEBAR","ENTER / NUMPAD ENTER","ESC","F","F / LEFT MOUSE BUTTON","F1","F10","F11","F2","F3","F5","F6","F7","F8 (CONSOLE)","F9","G","H","HOME","ID","INPUT_ACCURATE_AIM","INPUT_AIM","INPUT_ARREST","INPUT_ATTACK","INPUT_ATTACK2","INPUT_CELLPHONE_CAMERA_DOF","INPUT_CELLPHONE_CAMERA_EXPRESSION","INPUT_CELLPHONE_CAMERA_FOCUS_LOCK","INPUT_CELLPHONE_CAMERA_GRID","INPUT_CELLPHONE_CAMERA_SELFIE","INPUT_CELLPHONE_CANCEL","INPUT_CELLPHONE_DOWN","INPUT_CELLPHONE_EXTRA_OPTION","INPUT_CELLPHONE_LEFT","INPUT_CELLPHONE_OPTION","INPUT_CELLPHONE_RIGHT","INPUT_CELLPHONE_SCROLL_BACKWARD","INPUT_CELLPHONE_SCROLL_FORWARD","INPUT_CELLPHONE_SELECT","INPUT_CELLPHONE_UP","INPUT_CHARACTER_WHEEL","INPUT_CINEMATIC_SLOWMO","INPUT_CONTEXT","INPUT_CONTEXT_SECONDARY","INPUT_COVER","INPUT_CREATOR_ACCEPT","INPUT_CREATOR_DELETE","INPUT_CREATOR_LS","INPUT_CREATOR_LT","INPUT_CREATOR_MENU_TOGGLE","INPUT_CREATOR_RS","INPUT_CREATOR_RT","INPUT_CURSOR_ACCEPT","INPUT_CURSOR_CANCEL","INPUT_CURSOR_SCROLL_DOWN","INPUT_CURSOR_SCROLL_UP","INPUT_CURSOR_X","INPUT_CURSOR_Y","INPUT_DETONATE","INPUT_DIVE","INPUT_DROP_AMMO","INPUT_DROP_WEAPON","INPUT_DUCK","INPUT_ENTER","INPUT_ENTER_CHEAT_CODE","INPUT_FRONTEND_ACCEPT","INPUT_FRONTEND_AXIS_X","INPUT_FRONTEND_AXIS_Y","INPUT_FRONTEND_CANCEL","INPUT_FRONTEND_DELETE","INPUT_FRONTEND_DOWN","INPUT_FRONTEND_ENDSCREEN_ACCEPT","INPUT_FRONTEND_ENDSCREEN_EXPAND","INPUT_FRONTEND_LB","INPUT_FRONTEND_LEADERBOARD","INPUT_FRONTEND_LEFT","INPUT_FRONTEND_LS","INPUT_FRONTEND_LT","INPUT_FRONTEND_PAUSE","INPUT_FRONTEND_PAUSE_ALTERNATE","INPUT_FRONTEND_RB","INPUT_FRONTEND_RDOWN","INPUT_FRONTEND_RIGHT","INPUT_FRONTEND_RIGHT_AXIS_X","INPUT_FRONTEND_RIGHT_AXIS_Y","INPUT_FRONTEND_RLEFT","INPUT_FRONTEND_RRIGHT","INPUT_FRONTEND_RS","INPUT_FRONTEND_RT","INPUT_FRONTEND_RUP","INPUT_FRONTEND_SELECT","INPUT_FRONTEND_SOCIAL_CLUB","INPUT_FRONTEND_SOCIAL_CLUB_SECONDARY","INPUT_FRONTEND_UP","INPUT_FRONTEND_X","INPUT_FRONTEND_Y","INPUT_HUD_SPECIAL","INPUT_INTERACTION_MENU","INPUT_JUMP","INPUT_LOOK_BEHIND","INPUT_LOOK_DOWN","INPUT_LOOK_DOWN_ONLY","INPUT_LOOK_LEFT","INPUT_LOOK_LEFT_ONLY","INPUT_LOOK_LR","INPUT_LOOK_RIGHT","INPUT_LOOK_RIGHT_ONLY","INPUT_LOOK_UD","INPUT_LOOK_UP","INPUT_LOOK_UP_ONLY","INPUT_MAP","INPUT_MAP_POI","INPUT_MELEE_ATTACK_ALTERNATE","INPUT_MELEE_ATTACK_HEAVY","INPUT_MELEE_ATTACK_LIGHT","INPUT_MELEE_ATTACK1","INPUT_MELEE_ATTACK2","INPUT_MELEE_BLOCK","INPUT_MOVE_DOWN","INPUT_MOVE_DOWN_ONLY","INPUT_MOVE_LEFT","INPUT_MOVE_LEFT_ONLY","INPUT_MOVE_LR","INPUT_MOVE_RIGHT","INPUT_MOVE_RIGHT_ONLY","INPUT_MOVE_UD","INPUT_MOVE_UP","INPUT_MOVE_UP_ONLY","INPUT_MP_TEXT_CHAT_ALL","INPUT_MP_TEXT_CHAT_CREW","INPUT_MP_TEXT_CHAT_FRIENDS","INPUT_MP_TEXT_CHAT_TEAM","INPUT_MULTIPLAYER_INFO","INPUT_NEXT_CAMERA","INPUT_NEXT_WEAPON","INPUT_PARACHUTE_BRAKE_LEFT","INPUT_PARACHUTE_BRAKE_RIGHT","INPUT_PARACHUTE_DEPLOY","INPUT_PARACHUTE_DETACH","INPUT_PARACHUTE_PITCH_DOWN_ONLY","INPUT_PARACHUTE_PITCH_UD","INPUT_PARACHUTE_PITCH_UP_ONLY","INPUT_PARACHUTE_PRECISION_LANDING","INPUT_PARACHUTE_SMOKE","INPUT_PARACHUTE_TURN_LEFT_ONLY","INPUT_PARACHUTE_TURN_LR","INPUT_PARACHUTE_TURN_RIGHT_ONLY","INPUT_PHONE","INPUT_PICKUP","INPUT_PREV_WEAPON","INPUT_PUSH_TO_TALK","INPUT_RADIO_WHEEL_LR","INPUT_RADIO_WHEEL_UD","INPUT_RAPPEL_JUMP","INPUT_RAPPEL_LONG_JUMP","INPUT_RAPPEL_SMASH_WINDOW","INPUT_RELOAD","INPUT_REPLAY_ADVANCE","INPUT_REPLAY_BACK","INPUT_REPLAY_CAMERADOWN","INPUT_REPLAY_CAMERAUP","INPUT_REPLAY_CLIP_DELETE","INPUT_REPLAY_CTRL","INPUT_REPLAY_CYCLEMARKERLEFT","INPUT_REPLAY_CYCLEMARKERRIGHT","INPUT_REPLAY_ENDPOINT","INPUT_REPLAY_FFWD","INPUT_REPLAY_FOVDECREASE","INPUT_REPLAY_FOVINCREASE","INPUT_REPLAY_HIDEHUD","INPUT_REPLAY_MARKER_DELETE","INPUT_REPLAY_NEWMARKER","INPUT_REPLAY_PAUSE","INPUT_REPLAY_PREVIEW","INPUT_REPLAY_PREVIEW_AUDIO","INPUT_REPLAY_RECORD","INPUT_REPLAY_RESTART","INPUT_REPLAY_REWIND","INPUT_REPLAY_SAVE","INPUT_REPLAY_SCREENSHOT","INPUT_REPLAY_SHOWHOTKEY","INPUT_REPLAY_SNAPMATIC_PHOTO","INPUT_REPLAY_START_STOP_RECORDING","INPUT_REPLAY_START_STOP_RECORDING_SECONDARY","INPUT_REPLAY_STARTPOINT","INPUT_REPLAY_TIMELINE_DUPLICATE_CLIP","INPUT_REPLAY_TIMELINE_PICKUP_CLIP","INPUT_REPLAY_TIMELINE_PLACE_CLIP","INPUT_REPLAY_TIMELINE_SAVE","INPUT_REPLAY_TOGGLE_TIMELINE","INPUT_REPLAY_TOGGLETIME","INPUT_REPLAY_TOGGLETIPS","INPUT_REPLAY_TOOLS","INPUT_SAVE_REPLAY_CLIP","INPUT_SCALED_LOOK_DOWN_ONLY","INPUT_SCALED_LOOK_LEFT_ONLY","INPUT_SCALED_LOOK_LR","INPUT_SCALED_LOOK_RIGHT_ONLY","INPUT_SCALED_LOOK_UD","INPUT_SCALED_LOOK_UP_ONLY","INPUT_SCRIPT_LB","INPUT_SCRIPT_LEFT_AXIS_X","INPUT_SCRIPT_LEFT_AXIS_Y","INPUT_SCRIPT_LS","INPUT_SCRIPT_LT","INPUT_SCRIPT_PAD_DOWN","INPUT_SCRIPT_PAD_LEFT","INPUT_SCRIPT_PAD_RIGHT","INPUT_SCRIPT_PAD_UP","INPUT_SCRIPT_RB","INPUT_SCRIPT_RDOWN","INPUT_SCRIPT_RIGHT_AXIS_X","INPUT_SCRIPT_RIGHT_AXIS_Y","INPUT_SCRIPT_RLEFT","INPUT_SCRIPT_RRIGHT","INPUT_SCRIPT_RS","INPUT_SCRIPT_RT","INPUT_SCRIPT_RUP","INPUT_SCRIPT_SELECT","INPUT_SCRIPTED_FLY_LR","INPUT_SCRIPTED_FLY_UD","INPUT_SCRIPTED_FLY_ZDOWN","INPUT_SCRIPTED_FLY_ZUP","INPUT_SELECT_CHARACTER_FRANKLIN","INPUT_SELECT_CHARACTER_MICHAEL","INPUT_SELECT_CHARACTER_MULTIPLAYER","INPUT_SELECT_CHARACTER_TREVOR","INPUT_SELECT_NEXT_WEAPON","INPUT_SELECT_PREV_WEAPON","INPUT_SELECT_WEAPON","INPUT_SELECT_WEAPON_AUTO_RIFLE","INPUT_SELECT_WEAPON_HANDGUN","INPUT_SELECT_WEAPON_HEAVY","INPUT_SELECT_WEAPON_MELEE","INPUT_SELECT_WEAPON_SHOTGUN","INPUT_SELECT_WEAPON_SMG","INPUT_SELECT_WEAPON_SNIPER","INPUT_SELECT_WEAPON_SPECIAL","INPUT_SELECT_WEAPON_UNARMED","INPUT_SKIP_CUTSCENE","INPUT_SNIPER_ZOOM","INPUT_SNIPER_ZOOM_IN","INPUT_SNIPER_ZOOM_IN_ALTERNATE","INPUT_SNIPER_ZOOM_IN_ONLY","INPUT_SNIPER_ZOOM_IN_SECONDARY","INPUT_SNIPER_ZOOM_OUT","INPUT_SNIPER_ZOOM_OUT_ALTERNATE","INPUT_SNIPER_ZOOM_OUT_ONLY","INPUT_SNIPER_ZOOM_OUT_SECONDARY","INPUT_SPECIAL_ABILITY","INPUT_SPECIAL_ABILITY_PC","INPUT_SPECIAL_ABILITY_SECONDARY","INPUT_SPRINT","INPUT_SWITCH_VISOR","INPUT_TALK","INPUT_THROW_GRENADE","INPUT_VEH_ACCELERATE","INPUT_VEH_AIM","INPUT_VEH_ATTACK","INPUT_VEH_ATTACK2","INPUT_VEH_BIKE_WINGS","INPUT_VEH_BRAKE","INPUT_VEH_CAR_JUMP","INPUT_VEH_CIN_CAM","INPUT_VEH_CINEMATIC_DOWN_ONLY","INPUT_VEH_CINEMATIC_LR","INPUT_VEH_CINEMATIC_UD","INPUT_VEH_CINEMATIC_UP_ONLY","INPUT_VEH_DRIVE_LOOK","INPUT_VEH_DRIVE_LOOK2","INPUT_VEH_DROP_PROJECTILE","INPUT_VEH_DUCK","INPUT_VEH_EXIT","INPUT_VEH_FLY_ATTACK","INPUT_VEH_FLY_ATTACK_CAMERA","INPUT_VEH_FLY_ATTACK2","INPUT_VEH_FLY_BOMB_BAY","INPUT_VEH_FLY_BOOST","INPUT_VEH_FLY_COUNTER","INPUT_VEH_FLY_DUCK","INPUT_VEH_FLY_MOUSE_CONTROL_OVERRIDE","INPUT_VEH_FLY_PITCH_DOWN_ONLY","INPUT_VEH_FLY_PITCH_UD","INPUT_VEH_FLY_PITCH_UP_ONLY","INPUT_VEH_FLY_ROLL_LEFT_ONLY","INPUT_VEH_FLY_ROLL_LR","INPUT_VEH_FLY_ROLL_RIGHT_ONLY","INPUT_VEH_FLY_SELECT_NEXT_WEAPON","INPUT_VEH_FLY_SELECT_PREV_WEAPON","INPUT_VEH_FLY_SELECT_TARGET_LEFT","INPUT_VEH_FLY_SELECT_TARGET_RIGHT","INPUT_VEH_FLY_THROTTLE_DOWN","INPUT_VEH_FLY_THROTTLE_UP","INPUT_VEH_FLY_UNDERCARRIAGE","INPUT_VEH_FLY_VERTICAL_FLIGHT_MODE","INPUT_VEH_FLY_YAW_LEFT","INPUT_VEH_FLY_YAW_RIGHT","INPUT_VEH_GRAPPLING_HOOK","INPUT_VEH_GUN_DOWN","INPUT_VEH_GUN_LEFT","INPUT_VEH_GUN_LR","INPUT_VEH_GUN_RIGHT","INPUT_VEH_GUN_UD","INPUT_VEH_GUN_UP","INPUT_VEH_HANDBRAKE","INPUT_VEH_HEADLIGHT","INPUT_VEH_HORN","INPUT_VEH_HOTWIRE_LEFT","INPUT_VEH_HOTWIRE_RIGHT","INPUT_VEH_HYDRAULICS_CONTROL_DOWN","INPUT_VEH_HYDRAULICS_CONTROL_LEFT","INPUT_VEH_HYDRAULICS_CONTROL_LR","INPUT_VEH_HYDRAULICS_CONTROL_RIGHT","INPUT_VEH_HYDRAULICS_CONTROL_TOGGLE","INPUT_VEH_HYDRAULICS_CONTROL_UD","INPUT_VEH_HYDRAULICS_CONTROL_UP","INPUT_VEH_JUMP","INPUT_VEH_LOOK_BEHIND","INPUT_VEH_LOOK_LEFT","INPUT_VEH_LOOK_RIGHT","INPUT_VEH_MELEE_HOLD","INPUT_VEH_MELEE_LEFT","INPUT_VEH_MELEE_RIGHT","INPUT_VEH_MOUSE_CONTROL_OVERRIDE","INPUT_VEH_MOVE_DOWN","INPUT_VEH_MOVE_DOWN_ONLY","INPUT_VEH_MOVE_LEFT","INPUT_VEH_MOVE_LEFT_ONLY","INPUT_VEH_MOVE_LR","INPUT_VEH_MOVE_RIGHT","INPUT_VEH_MOVE_RIGHT_ONLY","INPUT_VEH_MOVE_UD","INPUT_VEH_MOVE_UP","INPUT_VEH_MOVE_UP_ONLY","INPUT_VEH_NEXT_RADIO","INPUT_VEH_NEXT_RADIO_TRACK","INPUT_VEH_PARACHUTE","INPUT_VEH_PASSENGER_AIM","INPUT_VEH_PASSENGER_ATTACK","INPUT_VEH_PREV_RADIO","INPUT_VEH_PREV_RADIO_TRACK","INPUT_VEH_PUSHBIKE_FRONT_BRAKE","INPUT_VEH_PUSHBIKE_PEDAL","INPUT_VEH_PUSHBIKE_REAR_BRAKE","INPUT_VEH_PUSHBIKE_SPRINT","INPUT_VEH_RADIO_WHEEL","INPUT_VEH_ROCKET_BOOST","INPUT_VEH_ROOF","INPUT_VEH_SELECT_NEXT_WEAPON","INPUT_VEH_SELECT_PREV_WEAPON","INPUT_VEH_SHUFFLE","INPUT_VEH_SLOWMO_DOWN_ONLY","INPUT_VEH_SLOWMO_UD","INPUT_VEH_SLOWMO_UP_ONLY","INPUT_VEH_SPECIAL","INPUT_VEH_SPECIAL_ABILITY_FRANKLIN","INPUT_VEH_STUNT_UD","INPUT_VEH_SUB_ASCEND","INPUT_VEH_SUB_DESCEND","INPUT_VEH_SUB_MOUSE_CONTROL_OVERRIDE","INPUT_VEH_SUB_PITCH_DOWN_ONLY","INPUT_VEH_SUB_PITCH_UD","INPUT_VEH_SUB_PITCH_UP_ONLY","INPUT_VEH_SUB_THROTTLE_DOWN","INPUT_VEH_SUB_THROTTLE_UP","INPUT_VEH_SUB_TURN_HARD_LEFT","INPUT_VEH_SUB_TURN_HARD_RIGHT","INPUT_VEH_SUB_TURN_LEFT_ONLY","INPUT_VEH_SUB_TURN_LR","INPUT_VEH_SUB_TURN_RIGHT_ONLY","INPUT_VEH_TRANSFORM","INPUT_WEAPON_SPECIAL","INPUT_WEAPON_SPECIAL_TWO","INPUT_WEAPON_WHEEL_LR","INPUT_WEAPON_WHEEL_NEXT","INPUT_WEAPON_WHEEL_PREV","INPUT_WEAPON_WHEEL_UD","INPUT_WHISTLE","INSERT","K","L","L3","LB","LEFT ALT","LEFT CONTROL","LEFT CTRL","LEFT MOUSE BUTTON","LEFT SHIFT","LEFT STICK","LT","M","MOUSE DOWN","MOUSE RIGHT","N","Name","NUMPAD -","NUMPAD +","NUMPAD 4","NUMPAD 5","NUMPAD 6","NUMPAD 7","NUMPAD 8","NUMPAD 9","NUMPAD- / SCROLLWHEEL UP","NUMPAD+ / SCROLLWHEEL DOWN","P","PAGE DOWN","PAGE UP","PAGEDOWN","PAGEUP","Q","R","R3","RB","RIGHT MOUSE BUTTON","RIGHT STICK","RT","S","SCROLLWHEEL BUTTON (PRESS)","SCROLLWHEEL DOWN","SCROLLWHEEL UP","SPACEBAR","START","T","TAB","U","V","W","X","Xbox Controller","Y","Z"]}],[{"l":"Ped Bones","p":["0","10706","11174","11816","12844","1356","14201","16335","17188","17719","18905","19336","20178","20279","20623","20781","2108","21550","22711","23553","23639","24806","24816","24817","24818","25260","26610","26611","26612","26613","26614","27474","28252","28422","29868","2992","31086","35502","35731","36029","36864","37119","37193","39317","40269","4089","4090","4137","4138","4153","4154","4169","4170","4185","4186","43536","43810","45509","45750","46078","46240","47419","47495","49979","51826","52301","5232","56604","57005","57597","57717","58271","58331","58866","58867","58868","58869","58870","60309","61007","61163","61839","6286","63931","64016","64017","64064","64065","64080","64081","64096","64097","64112","64113","6442","64729","65068","65245","Bone Name","FACIAL_facialRoot","FB_Brow_Centre_000","FB_Jaw_000","FB_L_Brow_Out_000","FB_L_CheekBone_000","FB_L_Eye_000","FB_L_Lid_Upper_000","FB_L_Lip_Bot_000","FB_L_Lip_Corner_000","FB_L_Lip_Top_000","FB_LowerLip_000","FB_LowerLipRoot_000","FB_R_Brow_Out_000","FB_R_CheekBone_000","FB_R_Eye_000","FB_R_Lid_Upper_000","FB_R_Lip_Bot_000","FB_R_Lip_Corner_000","FB_R_Lip_Top_000","FB_Tongue_000","FB_UpperLip_000","FB_UpperLipRoot_000","ID","IK_Head","IK_L_Foot","IK_L_Hand","IK_R_Foot","IK_R_Hand","IK_Root","MH_L_Elbow","MH_L_Knee","MH_R_Elbow","MH_R_Knee","PH_L_Foot","PH_L_Hand","PH_R_Foot","PH_R_Hand","RB_L_ArmRoll","RB_L_ForeArmRoll","RB_L_ThighRoll","RB_Neck_1","RB_R_ArmRoll","RB_R_ForeArmRoll","RB_R_ThighRoll","SKEL_Head","SKEL_L_Calf","SKEL_L_Clavicle","SKEL_L_Finger00","SKEL_L_Finger01","SKEL_L_Finger02","SKEL_L_Finger10","SKEL_L_Finger11","SKEL_L_Finger12","SKEL_L_Finger20","SKEL_L_Finger21","SKEL_L_Finger22","SKEL_L_Finger30","SKEL_L_Finger31","SKEL_L_Finger32","SKEL_L_Finger40","SKEL_L_Finger41","SKEL_L_Finger42","SKEL_L_Foot","SKEL_L_Forearm","SKEL_L_Hand","SKEL_L_Thigh","SKEL_L_Toe0","SKEL_L_UpperArm","SKEL_Neck_1","SKEL_Pelvis","SKEL_R_Calf","SKEL_R_Clavicle","SKEL_R_Finger00","SKEL_R_Finger01","SKEL_R_Finger02","SKEL_R_Finger10","SKEL_R_Finger11","SKEL_R_Finger12","SKEL_R_Finger20","SKEL_R_Finger21","SKEL_R_Finger22","SKEL_R_Finger30","SKEL_R_Finger31","SKEL_R_Finger32","SKEL_R_Finger40","SKEL_R_Finger41","SKEL_R_Finger42","SKEL_R_Foot","SKEL_R_Forearm","SKEL_R_Hand","SKEL_R_Thigh","SKEL_R_Toe0","SKEL_R_UpperArm","SKEL_ROOT","SKEL_Spine_Root","SKEL_Spine0","SKEL_Spine1","SKEL_Spine2","SKEL_Spine3"]}],[{"l":"Vehicle Bones","p":["afterburner","aileron_l","aileron_r","airbrake_l","airbrake_r","ammobelt","arm_1","arm_2","arm_3","arm_4","attach_female","attach_male","barracks","bobble_base","bobble_hand","bobble_head","bodyshell","bogie_front","bogie_rear","Bone Name","bonnet","boom","Boom_Driver","boot","brakelight_l","brakelight_m","brakelight_r","break_extra_1","break_extra_10","break_extra_2","break_extra_3","break_extra_4","break_extra_5","break_extra_6","break_extra_7","break_extra_8","break_extra_9","bucket","bumper_f","bumper_r","carriage","chassis","chassis_Control","chassis_dummy","chassis_lowlod","combine_auger","combine_reel","crank","cutter_driver","dashglow","dials","door_dside_f","door_dside_r","door_hatch_l","door_hatch_r","door_pside_f","door_pside_r","doorlight_lf","doorlight_lr","doorlight_rf","doorlight_rr","draft_animal_attach_lf","draft_animal_attach_lm","draft_animal_attach_lr","draft_animal_attach_rf","draft_animal_attach_rm","draft_animal_attach_rr","elevator_l","elevator_r","elevators","emissives","engine","engine_l","engine_r","engineblock","exhaust","exhaust_10","exhaust_11","exhaust_12","exhaust_13","exhaust_14","exhaust_15","exhaust_16","exhaust_2","exhaust_3","exhaust_4","exhaust_5","exhaust_6","exhaust_7","exhaust_8","exhaust_9","extra_1","extra_11","extra_12","extra_2","extra_3","extra_4","extra_5","extra_6","extra_7","extra_8","extra_9","extra_ten","extralight_1","extralight_2","extralight_3","extralight_4","fork_l","fork_r","forks","forks_attach","forks_l","forks_u","frame_1","frame_2","frame_3","frame_pickup_1","frame_pickup_2","frame_pickup_3","frame_pickup_4","freight_bogey","freight_cont","freightgrain_slidedoor","gear_door_fl","gear_door_fr","gear_door_rl1","gear_door_rl2","gear_door_rml","gear_door_rmr","gear_door_rr1","gear_door_rr2","gear_f","gear_lm1","gear_rl","gear_rm","gear_rm1","gear_rr","handle_dside_f","handle_dside_r","handle_pside_f","handle_pside_r","handlebars","hbgrip_l","hbgrip_r","headlight_l","headlight_r","hub_lf","hub_lm1","hub_lm2","hub_lm3","hub_lr","hub_rf","hub_rm1","hub_rm2","hub_rm3","hub_rr","indicator_lf","indicator_lr","indicator_rf","indicator_rr","interiorlight","legs","light_cover","Lookat_LowrPiston_boom","Lookat_UpprPiston_head","mast","misc_1","misc_2","misc_a","misc_b","misc_c","misc_d","misc_e","misc_f","misc_g","misc_h","misc_i","misc_j","misc_k","misc_l","misc_m","misc_n","misc_o","misc_p","misc_q","misc_r","misc_s","misc_t","misc_u","misc_v","misc_w","misc_x","misc_y","misc_z","mod_col_1","mod_col_2","mod_col_3","mod_col_4","mod_col_5","moving_prop","moving_prop2","neon_b","neon_f","neon_l","neon_r","no_ped_col_step_l","no_ped_col_step_r","no_ped_col_strut_1_l","no_ped_col_strut_1_r","no_ped_col_strut_2_l","no_ped_col_strut_2_r","nozzles_f","nozzles_r","numberplate","outriggers_l","outriggers_r","overheat","overheat_2","pedal_l","pedal_r","petrolcap","petroltank","petroltank_l","petroltank_r","pontoon_l","pontoon_r","prop_1","prop_2","prop_3","prop_4","prop_5","prop_6","prop_7","prop_8","prop_left","prop_right","reversinglight_l","reversinglight_r","roof","roof2","rope_attach_a","rope_attach_b","rotor_main","rotor_main_2","rotor_rear","rotor_rear_2","rudder","rudder_2","rudder_l","rudder_r","rudder2","scoop","searchlight_base","searchlight_light","seat_dside_f","seat_dside_r","seat_dside_r1","seat_dside_r2","seat_dside_r3","seat_dside_r4","seat_dside_r5","seat_dside_r6","seat_dside_r7","seat_pside_f","seat_pside_r","seat_pside_r1","seat_pside_r2","seat_pside_r3","seat_pside_r4","seat_pside_r5","seat_pside_r6","seat_pside_r7","shovel_2","shovel_3","siren_glass1","siren_glass10","siren_glass11","siren_glass12","siren_glass13","siren_glass14","siren_glass15","siren_glass16","siren_glass17","siren_glass18","siren_glass19","siren_glass2","siren_glass20","siren_glass3","siren_glass4","siren_glass5","siren_glass6","siren_glass7","siren_glass8","siren_glass9","siren1","siren10","siren11","siren12","siren13","siren14","siren15","siren16","siren17","siren18","siren19","siren2","siren20","siren3","siren4","siren5","siren6","siren7","siren8","siren9","slipstream_l","slipstream_r","soft_1","soft_10","soft_11","soft_12","soft_13","soft_2","soft_3","soft_4","soft_5","soft_6","soft_7","soft_8","soft_9","spoiler","spring_lf","spring_lr","spring_rf","spring_rr","static_prop","static_prop2","steering","stick","struts","suspension_lf","suspension_lm","suspension_lr","suspension_rf","suspension_rm","suspension_rr","swingarm","tail","taillight_l","taillight_r","tipper","tow_arm","tow_mount_a","tow_mount_b","transmission_f","transmission_m","transmission_r","turret_1barrel","turret_1base","turret_2barrel","turret_2base","turret_3barrel","turret_3base","unknown_id","vehicle_blocker","weapon_1a","weapon_1a_rot","weapon_1b","weapon_1b_rot","weapon_1c","weapon_1c_rot","weapon_1d","weapon_1d_rot","weapon_2a","weapon_2a_rot","weapon_2b","weapon_2b_rot","weapon_2c","weapon_2c_rot","weapon_2d","weapon_2d_rot","weapon_3a","weapon_3a_rot","weapon_3b","weapon_3b_rot","weapon_3c","weapon_3c_rot","weapon_3d","weapon_3d_rot","weapon_4a","weapon_4a_rot","weapon_4b","weapon_4b_rot","weapon_4c","weapon_4c_rot","weapon_4d","weapon_4d_rot","wheel_f","wheel_lb1_dummy","wheel_lb2_dummy","wheel_lb3_dummy","wheel_lf","wheel_lf1_dummy","wheel_lf2_dummy","wheel_lf3_dummy","wheel_lm1","wheel_lm2","wheel_lm3","wheel_lr","wheel_r","wheel_rb1_dummy","wheel_rb2_dummy","wheel_rb3_dummy","wheel_rf","wheel_rf1_dummy","wheel_rf2_dummy","wheel_rf3_dummy","wheel_rm1","wheel_rm2","wheel_rm3","wheel_rr","wheelcover_l","wheelcover_r","window_lf","window_lf1","window_lf2","window_lf3","window_lm","window_lr","window_lr1","window_lr2","window_lr3","window_rf","window_rf1","window_rf2","window_rf3","window_rm","window_rr","window_rr1","window_rr2","window_rr3","windscreen","windscreen_r","wing_l","wing_lf","wing_lr","wing_r","wing_rf","wing_rr","wingtip_1","wingtip_2"]}],[{"l":"Vehicle Colors","p":["#08e9fa","#0a0c17","#0b1421","#0b9cf1","#0c0d18","#0d1116","#0e0d14","#11141a","#112552","#122e2b","#12383c","#13181f","#132428","#151921","#155c2d","#1b203e","#1b6770","#1c1d21","#1c3551","#1d2129","#1d5a3f","#1e1d22","#1e232f","#1e2429","#1f2852","#221b19","#222e46","#22383e","#233155","#2354a1","#2446a8","#253aa7","#26282a","#275190","#282c4d","#2a282b","#2d362a","#2d423f","#2f2d52","#304c7e","#31423f","#32383d","#333a3c","#345e72","#354158","#363a3f","#371c25","#39434d","#394762","#3a2a1b","#3b39e0","#3c3f47","#402e2b","#4271e1","#444e54","#453831","#454b4f","#45594b","#46231a","#473f2b","#47578f","#49111d","#4c5f81","#4cc3da","#4e6443","#503218","#506272","#515554","#58688e","#5870a1","#5a6352","#608592","#621276","#63625c","#637380","#637ba7","#653f23","#65867f","#66b81f","#696748","#6a747c","#6b1f7b","#6c6b4b","#6ea3c6","#6f1818","#726c57","#732021","#74b5d8","#752b19","#76afbe","#775c3e","#778794","#785f33","#7a6440","#7a6c55","#7b1a22","#7f6a48","#81827f","#81844c","#83c566","#8c9095","#8e1b1f","#8f1e17","#916532","#979a97","#98d223","#999da0","#9b8c78","#9ba0a8","#9c1016","#9f9e8a","#a0a199","#a4965f","#a51e23","#a94744","#ac9975","#afd6e4","#b0ab94","#b0ee6e","#b16c51","#b5a079","#b60f25","#b6111b","#b7bfca","#bc1917","#bcac8f","#bfae7b","#c00e1a","#c2944f","#c2c4c6","#c3b492","#cf1f21","#d3d3d3","#d44a17","#d6e7f1","#da1918","#de0f18","#df5891","#dfd5b2","#dfddd0","#e0e13d","#eae6de","#eaeaea","#f1cc40","#f21f99","#f27d20","#f2ad2e","#f6ae20","#f78616","#f7edd5","#f8b658","#f9a458","#fbe212","#fcf9f1","#fdd6cd","#ffc91f","#ffcf20","#fffff6","#fffffb","#ffffff","■■■■","0","1","10","10, 12, 23","100","101","101, 134, 127","101, 63, 35","102","102, 184, 31","103","104","105","105, 103, 72","106","106, 116, 124","107","107, 31, 123","108","108, 107, 75","109","11","11, 156, 241","11, 20, 33","110","110, 163, 198","111","111, 24, 24","112","113","114","114, 108, 87","115","115, 32, 33","116","116, 181, 216","117","117, 43, 25","118","118, 175, 190","119","119, 135, 148","119, 92, 62","12","12, 13, 24","120","120, 95, 51","121","122","122, 100, 64","122, 108, 85","123","123, 26, 34","124","125","126","127","127, 106, 72","128","129","129, 130, 127","129, 132, 76","13","13, 17, 22","130","131","131, 197, 102","132","133","134","135","136","137","138","139","14","14, 13, 20","140","140, 144, 149","141","142","142, 27, 31","143","143, 30, 23","144","145","145, 101, 50","146","147","148","149","15","150","151","151, 154, 151","152","152, 210, 35","153","153, 157, 160","154","155","155, 140, 120","155, 160, 168","156","156, 16, 22","157","158","159","159, 158, 138","16","160, 161, 153","164, 150, 95","165, 30, 35","169, 71, 68","17","17, 20, 26","17, 37, 82","172, 153, 117","175, 214, 228","176, 171, 148","176, 238, 110","177, 108, 81","18","18, 46, 43","18, 56, 60","181, 160, 121","182, 15, 37","182, 17, 27","183, 191, 202","188, 172, 143","188, 25, 23","19","19, 24, 31","19, 36, 40","191, 174, 123","192, 14, 26","194, 148, 79","194, 196, 198","195, 180, 146","2","20","207, 31, 33","21","21, 25, 33","21, 92, 45","211, 211, 211","212, 74, 23","214, 231, 241","218, 25, 24","22","222, 15, 24","223, 213, 178","223, 221, 208","223, 88, 145","224, 225, 61","23","234, 230, 222","234, 234, 234","24","241, 204, 64","242, 125, 32","242, 173, 46","242, 31, 153","246, 174, 32","247, 134, 22","247, 237, 213","248, 182, 88","249, 164, 88","25","251, 226, 18","252, 249, 241","253, 214, 205","255, 201, 31","255, 207, 32","255, 255, 246","255, 255, 251","255, 255, 255","26","27","27, 103, 112","27, 32, 62","28","28, 29, 33","28, 53, 81","29","29, 33, 41","29, 90, 63","3","30","30, 29, 34","30, 35, 47","30, 36, 41","31","31, 40, 82","32","33","34","34, 27, 25","34, 46, 70","34, 56, 62","35","35, 49, 85","35, 84, 161","36","36, 70, 168","37","37, 58, 167","38","38, 40, 42","39","39, 81, 144","4","40","40, 44, 77","41","42","42, 40, 43","43","44","45","45, 54, 42","45, 66, 63","46","47","47, 45, 82","48","48, 76, 126","49","49, 66, 63","5","50","50, 56, 61","51","51, 58, 60","52","52, 94, 114","53","53, 65, 88","54","54, 58, 63","55","55, 28, 37","56","57","57, 67, 77","57, 71, 98","58","58, 42, 27","59","59, 57, 224","6","60","60, 63, 71","61","62","63","64","64, 46, 43","65","66","66, 113, 225","67","68","68, 78, 84","69","69, 56, 49","69, 75, 79","69, 89, 75","7","70","70, 35, 26","71","71, 63, 43","71, 87, 143","72","73","73, 17, 29","74","75","76","76, 195, 218","76, 95, 129","77","78","78, 100, 67","79","8","8, 233, 250","80","80, 50, 24","80, 98, 114","81","81, 85, 84","82","83","84","85","86","87","88","88, 104, 142","88, 112, 161","89","9","90","90, 99, 82","91","92","93","94","95","96","96, 133, 146","97","98","98, 18, 118","99","99, 115, 128","99, 123, 167","99, 98, 92","Blue","Brushed Aluminium","Brushed Black steel","Brushed Gold","Brushed Steel","Chrome","DEFAULT ALLOY COLOR","Description","Epsilon Blue","Green","HEX","Hot Pink","hunter green","ID","Matte Black","Matte Blue","Matte Brown","Matte Dark Blue","Matte Dark Purple","Matte Dark Red","Matte Desert Brown","Matte Desert Tan","Matte Foilage Green","Matte Forest Green","Matte Gray","Matte Green","Matte Light Grey","Matte Lime Green","Matte Midnight Blue","Matte Olive Drab","Matte Orange","Matte Purple","Matte Red","Matte White","Matte Yellow","Metaillic V Dark Blue","Metallic Anthracite Grey","Metallic Beach Sand","Metallic Beechwood","Metallic Biston Brown","Metallic Black","Metallic Black Purple","Metallic Black Red","Metallic Black Steal","Metallic Blaze Red","Metallic Blue","Metallic Blue Silver","Metallic Bright Blue","Metallic Bronze","Metallic Cabernet Red","Metallic Candy Red","Metallic Champagne","Metallic Choco Brown","Metallic Choco Orange","Metallic Classic Gold","Metallic Cream","Metallic Dark Beechwood","Metallic Dark Blue","Metallic Dark Green","Metallic Dark Ivory","Metallic Dark Silver","Metallic Desert Red","Metallic Diamond Blue","Metallic Formula Red","Metallic Frost White","Metallic Garnet Red","Metallic Gasoline Blue Green","Metallic Golden Brown","Metallic Graceful Red","Metallic Graphite Black","Metallic Green","Metallic Gun Metal","Metallic Harbor Blue","Metallic Lava Red","Metallic Light Brown","Metallic Lime","Metallic Mariner Blue","Metallic Midnight Blue","Metallic Midnight Silver","Metallic Moss Brown","Metallic Nautical Blue","Metallic Olive Green","Metallic Orange","Metallic Pueblo Beige","Metallic Purple","Metallic Purple Blue","Metallic Race Yellow","Metallic Racing Green","Metallic Red","Metallic Saxony Blue","Metallic Sea Green","Metallic Securicor Green","Metallic Shadow Silver","Metallic Silver","Metallic Spinnaker Blue","Metallic Steel Gray","Metallic Stone Silver","Metallic Straw Beige","Metallic Sun Bleeched Sand","Metallic Sunrise Orange","Metallic Surf Blue","Metallic Taxi Yellow","Metallic Torino Red","Metallic Ultra Blue","Metallic Vermillion Pink","Metallic White","Metallic Yellow Bird","Mettalic Black Blue","MODSHOP BLACK1","Orange","police car blue","Pure Gold","Pure White","RGB","Salmon pink","Util Black","Util Black Poly","Util Blue","Util Bright Blue","Util Bright Red","Util Brown","Util Dark Blue","Util Dark Green","Util Dark silver","Util Garnet Red","Util Green","Util Gun Metal","Util Light Brown","Util Lightning blue","Util Maui Blue Poly","Util Medium Brown","Util Midnight Blue","Util Off White","Util Red","Util Sea Foam Blue","Util Shadow Silver","Util Silver","Worn Black","Worn Blue","Worn Blue Silver","Worn Brown","Worn Dark blue","Worn Dark Brown","Worn Dark Green","Worn Dark Red","Worn Golden Red","Worn Graphite","Worn Green","Worn Honey Beige","Worn Light blue","Worn Light Orange","Worn Off White","Worn Olive Army Green","Worn Orange","Worn Red","Worn Sea Wash","Worn Shadow Silver","Worn Silver","Worn Silver Grey","Worn straw beige","Worn Taxi Yellow","Worn White"]}],[{"l":"Vehicle Mods"},{"l":"Mods","p":["0","1","10","11","12","13","14 (0 to 51)","15","16","18","2","20","22","23","24 (Only for Motorcycles)","25","27","28","3","30","33","34","35","38","4","40","48","5","55","6","62","66","67","7","8","9","Armor","Back Wheels","Boost","Brakes","Colour 1","Colour 2","Description","Dial Design","Engine","Exhaust","Fender","Frame","Front Bumper","Front Wheels","Grille","Hood","Horns","Hydraulics","Livery","Mod Index","Ornaments","Plaques","Plate","Plate holders","Rear Bumper","Right Fender","Roof","Shift Lever","Side Skirt","Spoilers","Steering Wheel","Suspension","Transmission","Trim Design","Turbo","Util Shadow Silver","Window Tint","Xenon"]},{"i":"bennys","l":"Benny's","p":["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","Aerials","Air filter","Arch Cover","Dashboard","Dial","Door Speaker","Engine Block","Hydraulics","ID","Livery","Ornaments","Plaques","Plateholder","Seats","Shifter Leavers","Speakers","Steering wheels","Struts","Tank","Trim","Trunk","Type Name","Unknown","Vanity Plates","Windows"]},{"l":"Los Santos Customs","p":["-1 to 0","-1 to 2","-1 to 3","-1 to 34","-1 to 4","11","12","14","16","22","46","62","Armour","Brakes","Engine","Horns","Indexes","Plate","Type ID","Type Name","Window Tint","Xenon Headlights"]},{"l":"Horn Types","p":["-1","0","1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","4","5","6","7","8","9","HORN_CALSSICAL1","HORN_CALSSICAL2","HORN_CALSSICAL3","HORN_CALSSICAL4","HORN_CALSSICAL5","HORN_CALSSICAL6","HORN_CALSSICAL7","HORN_CLASSICAL8","HORN_CLASSICALLOOP1","HORN_CLASSICALLOOP2","HORN_CLOWN","HORN_JAZZ1","HORN_JAZZ2","HORN_JAZZ3","HORN_JAZZLOOP","HORN_MUSICAL1","HORN_MUSICAL2","HORN_MUSICAL3","HORN_MUSICAL4","HORN_MUSICAL5","HORN_POLICE","HORN_SADTROMBONE","HORN_SCALEDO","HORN_SCALEDO_HIGH","HORN_SCALEFA","HORN_SCALELA","HORN_SCALEMI","HORN_SCALERE","HORN_SCALESOL","HORN_SCALETI","HORN_STARSPANGBAN1","HORN_STARSPANGBAN2","HORN_STARSPANGBAN3","HORN_STARSPANGBAN4","HORN_STOCK","HORN_TRUCK","IndexID","ModName","Type Id"]},{"l":"Engine Types","p":["Type Id","Description","IndexID","11","Standard Engine","-1","EMS-Improvement 1","0","EMS-Improvement 2","1","EMS-Improvement 3","2","EMS-Improvement 4","3"]},{"l":"Break Types","p":["Type Id","Description","IndexID","12","Standard Brakes","-1","Street Brakes","0","Sport Brakes","1","Race Brakes","2"]},{"l":"Transmission Types","p":["Type Id","Description","IndexID","13","Standard Transmission","-1","Street Transmission","0","Sport Transmission","1","Race Transmission","2"]},{"l":"Suspensions Types","p":["Type Id","Description","IndexID","15","Standard Suspension","-1","Lower Suspension","0","Street Suspension","1","Sport Suspension","2","Race Suspension","3"]},{"l":"Armour Types","p":["-1","0","1","100% Armour","16","2","20% Armour","3","4","40% Armour","60% Armour","80% Armour","Description","IndexID","No Armour","Type Id"]},{"l":"Turbo","p":["Type Id","Description","IndexID","18","None","-1","Turbo Tuning","0"]},{"l":"Xenon Headlights","p":["Type Id","Description","IndexID","22","Standard Lights","-1","0"]},{"l":"Window Types","p":["Type Id","Description","IndexID","46","None","-1","Light Smokeglas","0","Dark Smokeglas","1","Limousine","2"]},{"l":"Plate Types","p":["Type Id","Description","IndexID","62","Blue on White1","-1","Blue on White2","0","Blue on White3","1","Yellow on Blue","2","Yellow on Black","3"]},{"l":"Boost Types","p":["Type Id","Description","IndexID","40","None","-1","20% Nitrous","0","60% Nitrous","1","100% Nitrous","2","Ram Boost","3"]}],[{"l":"Weapon Pickup Models","p":["0x116FC4E6","0x14568F28","0x1CD2CF66","0x1CD604C7","0x1D9588D3","0x1E9A99F8","0x20796A82","0x20893292","0x22B15640","0x278D8734","0x295691A9","0x2C014CA6","0x2C804FE3","0x2DD30479","0x2E071B5A","0x2E764125","0x2F36B434","0x31EA45C9","0x3A4C2AD2","0x3B0F70A7","0x3B662889","0x3DE942BD","0x41D2CF56","0x4316CC09","0x499A096A","0x4B5259BE","0x4BFB42D1","0x4C35269","0x4D36C349","0x4E301CD0","0x4F92184","0x5307A4EC","0x550447A9","0x5A26FE0","0x5C517D97","0x5DB6C18A","0x5DE0AD3E","0x5E0683A1","0x5EA16D74","0x602941D0","0x614BFCAC","0x624F7213","0x65948212","0x65A7D8E9","0x6773257D","0x68605A36","0x693583AD","0x6C5B941A","0x6D60976C","0x6E4E65C2","0x6E717A95","0x711D02A4","0x741C684A","0x763F7121","0x77F3F2DD","0x789576E2","0x79284A9","0x7C119D58","0x80AB931C","0x815D66E8","0x8187206F","0x81EE601E","0x84837FD7","0x84D676D4","0x85CAA9B1","0x872DC888","0x881AB0A8","0x88EAACA7","0x8967B4F3","0x8ADDEC75","0x8C0FCB13","0x8F707C18","0x90EFDF3B","0x9299C95B","0x93EBB26","0x94FA0B5E","0x968339D","0x96B412A3","0x977C0F2","0x98D79EF","0x9CF13918","0x9F55D149","0xA04E8B0D","0xA421A532","0xA54AE7B7","0xA5B8CAA9","0xA717F898","0xA7EA40CE","0xA91FDC8B","0xA9355DCD","0xAF692CA9","0xB2930A14","0xB2B5325E","0xB86AEE5B","0xBCC5C1F2","0xBD4DE242","0xBDB6FFA5","0xBDD874BC","0xBED46EC5","0xBFEE6C3B","0xC01EB678","0xC02CF125","0xC3CD8B31","0xC5B72713","0xC69DE3FF","0xCC7CCD1B","0xCC8B3905","0xCC90A373","0xCE6FDD6B","0xD0AACEF7","0xD3722A5B","0xD3A39366","0xD8257ABF","0xDDE4181A","0xDE58E0B3","0xDE78F17E","0xDF711959","0xE013E01C","0xE175C698","0xE33D8630","0xE46E11B4","0xE4BD2FC6","0xE5121369","0xE7CF07CC","0xEBF89D5F","0xEE0E26F3","0xEF2B7390","0xF0EA0639","0xF25A01B9","0xF33C83B0","0xF5C5DADC","0xF92F486C","0xF99E15D0","0xF9AFB48F","0xF9E2DF1F","0xFA51ABF5","0xFD16169E","0xFD9CAEDE","0xFDEE8368","0xFE18F3AF","0xFE2A352C","0xFE73AB5","0xFF0A8297","Pickup Hash","Pickup Model","PICKUP_AMMO_BULLET_MP","PICKUP_AMMO_FIREWORK","PICKUP_AMMO_FIREWORK_MP","PICKUP_AMMO_FLAREGUN","PICKUP_AMMO_GRENADELAUNCHER","PICKUP_AMMO_GRENADELAUNCHER_MP","PICKUP_AMMO_HOMINGLAUNCHER","PICKUP_AMMO_MG","PICKUP_AMMO_MINIGUN","PICKUP_AMMO_MISSILE_MP","PICKUP_AMMO_PISTOL","PICKUP_AMMO_RIFLE","PICKUP_AMMO_RPG","PICKUP_AMMO_SHOTGUN","PICKUP_AMMO_SMG","PICKUP_AMMO_SNIPER","PICKUP_ARMOUR_STANDARD","PICKUP_CAMERA","PICKUP_CUSTOM_SCRIPT","PICKUP_GANG_ATTACK_MONEY","PICKUP_HEALTH_SNACK","PICKUP_HEALTH_STANDARD","PICKUP_MONEY_CASE","PICKUP_MONEY_DEP_BAG","PICKUP_MONEY_MED_BAG","PICKUP_MONEY_PAPER_BAG","PICKUP_MONEY_PURSE","PICKUP_MONEY_SECURITY_CASE","PICKUP_MONEY_VARIABLE","PICKUP_MONEY_WALLET","PICKUP_PARACHUTE","PICKUP_PORTABLE_CRATE_FIXED_INCAR","PICKUP_PORTABLE_CRATE_FIXED_INCAR_SMALL","PICKUP_PORTABLE_CRATE_FIXED_INCAR_WITH_PASSENGERS","PICKUP_PORTABLE_CRATE_UNFIXED","PICKUP_PORTABLE_CRATE_UNFIXED_INAIRVEHICLE_WITH_PASSENGERS","PICKUP_PORTABLE_CRATE_UNFIXED_INCAR","PICKUP_PORTABLE_CRATE_UNFIXED_INCAR_SMALL","PICKUP_PORTABLE_CRATE_UNFIXED_INCAR_WITH_PASSENGERS","PICKUP_PORTABLE_CRATE_UNFIXED_LOW_GLOW","PICKUP_PORTABLE_DLC_VEHICLE_PACKAGE","PICKUP_PORTABLE_PACKAGE","PICKUP_SUBMARINE","PICKUP_VEHICLE_ARMOUR_STANDARD","PICKUP_VEHICLE_CUSTOM_SCRIPT","PICKUP_VEHICLE_CUSTOM_SCRIPT_LOW_GLOW","PICKUP_VEHICLE_CUSTOM_SCRIPT_NO_ROTATE","PICKUP_VEHICLE_HEALTH_STANDARD","PICKUP_VEHICLE_HEALTH_STANDARD_LOW_GLOW","PICKUP_VEHICLE_MONEY_VARIABLE","PICKUP_VEHICLE_WEAPON_APPISTOL","PICKUP_VEHICLE_WEAPON_ASSAULTSMG","PICKUP_VEHICLE_WEAPON_COMBATPISTOL","PICKUP_VEHICLE_WEAPON_GRENADE","PICKUP_VEHICLE_WEAPON_MICROSMG","PICKUP_VEHICLE_WEAPON_MOLOTOV","PICKUP_VEHICLE_WEAPON_PISTOL","PICKUP_VEHICLE_WEAPON_PISTOL50","PICKUP_VEHICLE_WEAPON_SAWNOFF","PICKUP_VEHICLE_WEAPON_SMG","PICKUP_VEHICLE_WEAPON_SMOKEGRENADE","PICKUP_VEHICLE_WEAPON_STICKYBOMB","PICKUP_WEAPON_ADVANCEDRIFLE","PICKUP_WEAPON_APPISTOL","PICKUP_WEAPON_ASSAULTRIFLE","PICKUP_WEAPON_ASSAULTRIFLE_MK2","PICKUP_WEAPON_ASSAULTSHOTGUN","PICKUP_WEAPON_ASSAULTSMG","PICKUP_WEAPON_AUTOSHOTGUN","PICKUP_WEAPON_BAT","PICKUP_WEAPON_BATTLEAXE","PICKUP_WEAPON_BOTTLE","PICKUP_WEAPON_BULLPUPRIFLE","PICKUP_WEAPON_BULLPUPRIFLE_MK2","PICKUP_WEAPON_BULLPUPSHOTGUN","PICKUP_WEAPON_CARBINERIFLE","PICKUP_WEAPON_CARBINERIFLE_MK2","PICKUP_WEAPON_COMBATMG","PICKUP_WEAPON_COMBATMG_MK2","PICKUP_WEAPON_COMBATPDW","PICKUP_WEAPON_COMBATPISTOL","PICKUP_WEAPON_COMPACTLAUNCHER","PICKUP_WEAPON_COMPACTRIFLE","PICKUP_WEAPON_CROWBAR","PICKUP_WEAPON_DAGGER","PICKUP_WEAPON_DBSHOTGUN","PICKUP_WEAPON_DOUBLEACTION","PICKUP_WEAPON_FIREWORK","PICKUP_WEAPON_FLAREGUN","PICKUP_WEAPON_FLASHLIGHT","PICKUP_WEAPON_GolfClub","PICKUP_WEAPON_GRENADE","PICKUP_WEAPON_GRENADELAUNCHER","PICKUP_WEAPON_GUSENBERG","PICKUP_WEAPON_HAMMER","PICKUP_WEAPON_HATCHET","PICKUP_WEAPON_HEAVYPISTOL","PICKUP_WEAPON_HEAVYSHOTGUN","PICKUP_WEAPON_HEAVYSNIPER","PICKUP_WEAPON_HEAVYSNIPER_MK2","PICKUP_WEAPON_HOMINGLAUNCHER","PICKUP_WEAPON_KNIFE","PICKUP_WEAPON_KNUCKLE","PICKUP_WEAPON_MACHETE","PICKUP_WEAPON_MACHINEPISTOL","PICKUP_WEAPON_MARKSMANPISTOL","PICKUP_WEAPON_MARKSMANRIFLE","PICKUP_WEAPON_MARKSMANRIFLE_MK2","PICKUP_WEAPON_MG","PICKUP_WEAPON_MICROSMG","PICKUP_WEAPON_MINIGUN","PICKUP_WEAPON_MINISMG","PICKUP_WEAPON_MOLOTOV","PICKUP_WEAPON_MUSKET","PICKUP_WEAPON_NIGHTSTICK","PICKUP_WEAPON_PETROLCAN","PICKUP_WEAPON_PIPEBOMB","PICKUP_WEAPON_PISTOL","PICKUP_WEAPON_PISTOL_MK2","PICKUP_WEAPON_PISTOL50","PICKUP_WEAPON_POOLCUE","PICKUP_WEAPON_PROXMINE","PICKUP_WEAPON_PUMPSHOTGUN","PICKUP_WEAPON_PUMPSHOTGUN_MK2","PICKUP_WEAPON_RAILGUN","PICKUP_WEAPON_REVOLVER","PICKUP_WEAPON_REVOLVER_MK2","PICKUP_WEAPON_RPG","PICKUP_WEAPON_SAWNOFFSHOTGUN","PICKUP_WEAPON_SMG","PICKUP_WEAPON_SMG_MK2","PICKUP_WEAPON_SMOKEGRENADE","PICKUP_WEAPON_SNIPERRIFLE","PICKUP_WEAPON_SNSPISTOL","PICKUP_WEAPON_SNSPISTOL_MK2","PICKUP_WEAPON_SPECIALCARBINE","PICKUP_WEAPON_SPECIALCARBINE_MK2","PICKUP_WEAPON_STICKYBOMB","PICKUP_WEAPON_STONE_HATCHET","PICKUP_WEAPON_STUNGUN","PICKUP_WEAPON_SWITCHBLADE","PICKUP_WEAPON_VINTAGEPISTOL","PICKUP_WEAPON_WRENCH"]}],[{"l":"Weather","p":["0","1","10","11","12","13","14","2","3","4","5","6","7","8","9","BLIZZARD","CLEAR","CLEARING","CLOUDS","EXTRASUNNY","FOGGY","HALLOWEEN","ID","NEUTRAL","OVERCAST","RAIN","SMOG","SNOW","SNOWLIGHT","THUNDER","XMAS"]}]]